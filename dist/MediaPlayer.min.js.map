{"version":3,"file":"MediaPlayer.min.js","mappings":"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","sources":["webpack://MediaPlayer/webpack/universalModuleDefinition","webpack://MediaPlayer/./node_modules/howler/dist/howler.js","webpack://MediaPlayer/webpack/bootstrap","webpack://MediaPlayer/webpack/runtime/define property getters","webpack://MediaPlayer/webpack/runtime/global","webpack://MediaPlayer/webpack/runtime/hasOwnProperty shorthand","webpack://MediaPlayer/webpack/runtime/make namespace object","webpack://MediaPlayer/./src/MediaController.js","webpack://MediaPlayer/./src/MediaPlayer.js","webpack://MediaPlayer/./src/index.js","webpack://MediaPlayer/./src/styles.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"MediaPlayer\"] = factory();\n\telse\n\t\troot[\"MediaPlayer\"] = factory();\n})(self, () => {\nreturn ","/*!\n *  howler.js v2.2.4\n *  howlerjs.com\n *\n *  (c) 2013-2020, James Simpson of GoldFire Studios\n *  goldfirestudios.com\n *\n *  MIT License\n */\n\n(function() {\n\n  'use strict';\n\n  /** Global Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create the global controller. All contained methods and properties apply\n   * to all sounds that are currently playing or will be in the future.\n   */\n  var HowlerGlobal = function() {\n    this.init();\n  };\n  HowlerGlobal.prototype = {\n    /**\n     * Initialize the global Howler object.\n     * @return {Howler}\n     */\n    init: function() {\n      var self = this || Howler;\n\n      // Create a global ID counter.\n      self._counter = 1000;\n\n      // Pool of unlocked HTML5 Audio objects.\n      self._html5AudioPool = [];\n      self.html5PoolSize = 10;\n\n      // Internal properties.\n      self._codecs = {};\n      self._howls = [];\n      self._muted = false;\n      self._volume = 1;\n      self._canPlayEvent = 'canplaythrough';\n      self._navigator = (typeof window !== 'undefined' && window.navigator) ? window.navigator : null;\n\n      // Public properties.\n      self.masterGain = null;\n      self.noAudio = false;\n      self.usingWebAudio = true;\n      self.autoSuspend = true;\n      self.ctx = null;\n\n      // Set to false to disable the auto audio unlocker.\n      self.autoUnlock = true;\n\n      // Setup the various state values for global tracking.\n      self._setup();\n\n      return self;\n    },\n\n    /**\n     * Get/set the global volume for all sounds.\n     * @param  {Float} vol Volume from 0.0 to 1.0.\n     * @return {Howler/Float}     Returns self or current volume.\n     */\n    volume: function(vol) {\n      var self = this || Howler;\n      vol = parseFloat(vol);\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!self.ctx) {\n        setupAudioContext();\n      }\n\n      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\n        self._volume = vol;\n\n        // Don't update any of the nodes if we are muted.\n        if (self._muted) {\n          return self;\n        }\n\n        // When using Web Audio, we just need to adjust the master gain.\n        if (self.usingWebAudio) {\n          self.masterGain.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n        }\n\n        // Loop through and change volume for all HTML5 audio nodes.\n        for (var i=0; i<self._howls.length; i++) {\n          if (!self._howls[i]._webAudio) {\n            // Get all of the sounds in this Howl group.\n            var ids = self._howls[i]._getSoundIds();\n\n            // Loop through all sounds and change the volumes.\n            for (var j=0; j<ids.length; j++) {\n              var sound = self._howls[i]._soundById(ids[j]);\n\n              if (sound && sound._node) {\n                sound._node.volume = sound._volume * vol;\n              }\n            }\n          }\n        }\n\n        return self;\n      }\n\n      return self._volume;\n    },\n\n    /**\n     * Handle muting and unmuting globally.\n     * @param  {Boolean} muted Is muted or not.\n     */\n    mute: function(muted) {\n      var self = this || Howler;\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!self.ctx) {\n        setupAudioContext();\n      }\n\n      self._muted = muted;\n\n      // With Web Audio, we just need to mute the master gain.\n      if (self.usingWebAudio) {\n        self.masterGain.gain.setValueAtTime(muted ? 0 : self._volume, Howler.ctx.currentTime);\n      }\n\n      // Loop through and mute all HTML5 Audio nodes.\n      for (var i=0; i<self._howls.length; i++) {\n        if (!self._howls[i]._webAudio) {\n          // Get all of the sounds in this Howl group.\n          var ids = self._howls[i]._getSoundIds();\n\n          // Loop through all sounds and mark the audio node as muted.\n          for (var j=0; j<ids.length; j++) {\n            var sound = self._howls[i]._soundById(ids[j]);\n\n            if (sound && sound._node) {\n              sound._node.muted = (muted) ? true : sound._muted;\n            }\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Handle stopping all sounds globally.\n     */\n    stop: function() {\n      var self = this || Howler;\n\n      // Loop through all Howls and stop them.\n      for (var i=0; i<self._howls.length; i++) {\n        self._howls[i].stop();\n      }\n\n      return self;\n    },\n\n    /**\n     * Unload and destroy all currently loaded Howl objects.\n     * @return {Howler}\n     */\n    unload: function() {\n      var self = this || Howler;\n\n      for (var i=self._howls.length-1; i>=0; i--) {\n        self._howls[i].unload();\n      }\n\n      // Create a new AudioContext to make sure it is fully reset.\n      if (self.usingWebAudio && self.ctx && typeof self.ctx.close !== 'undefined') {\n        self.ctx.close();\n        self.ctx = null;\n        setupAudioContext();\n      }\n\n      return self;\n    },\n\n    /**\n     * Check for codec support of specific extension.\n     * @param  {String} ext Audio file extention.\n     * @return {Boolean}\n     */\n    codecs: function(ext) {\n      return (this || Howler)._codecs[ext.replace(/^x-/, '')];\n    },\n\n    /**\n     * Setup various state values for global tracking.\n     * @return {Howler}\n     */\n    _setup: function() {\n      var self = this || Howler;\n\n      // Keeps track of the suspend/resume state of the AudioContext.\n      self.state = self.ctx ? self.ctx.state || 'suspended' : 'suspended';\n\n      // Automatically begin the 30-second suspend process\n      self._autoSuspend();\n\n      // Check if audio is available.\n      if (!self.usingWebAudio) {\n        // No audio is available on this system if noAudio is set to true.\n        if (typeof Audio !== 'undefined') {\n          try {\n            var test = new Audio();\n\n            // Check if the canplaythrough event is available.\n            if (typeof test.oncanplaythrough === 'undefined') {\n              self._canPlayEvent = 'canplay';\n            }\n          } catch(e) {\n            self.noAudio = true;\n          }\n        } else {\n          self.noAudio = true;\n        }\n      }\n\n      // Test to make sure audio isn't disabled in Internet Explorer.\n      try {\n        var test = new Audio();\n        if (test.muted) {\n          self.noAudio = true;\n        }\n      } catch (e) {}\n\n      // Check for supported codecs.\n      if (!self.noAudio) {\n        self._setupCodecs();\n      }\n\n      return self;\n    },\n\n    /**\n     * Check for browser support for various codecs and cache the results.\n     * @return {Howler}\n     */\n    _setupCodecs: function() {\n      var self = this || Howler;\n      var audioTest = null;\n\n      // Must wrap in a try/catch because IE11 in server mode throws an error.\n      try {\n        audioTest = (typeof Audio !== 'undefined') ? new Audio() : null;\n      } catch (err) {\n        return self;\n      }\n\n      if (!audioTest || typeof audioTest.canPlayType !== 'function') {\n        return self;\n      }\n\n      var mpegTest = audioTest.canPlayType('audio/mpeg;').replace(/^no$/, '');\n\n      // Opera version <33 has mixed MP3 support, so we need to check for and block it.\n      var ua = self._navigator ? self._navigator.userAgent : '';\n      var checkOpera = ua.match(/OPR\\/(\\d+)/g);\n      var isOldOpera = (checkOpera && parseInt(checkOpera[0].split('/')[1], 10) < 33);\n      var checkSafari = ua.indexOf('Safari') !== -1 && ua.indexOf('Chrome') === -1;\n      var safariVersion = ua.match(/Version\\/(.*?) /);\n      var isOldSafari = (checkSafari && safariVersion && parseInt(safariVersion[1], 10) < 15);\n\n      self._codecs = {\n        mp3: !!(!isOldOpera && (mpegTest || audioTest.canPlayType('audio/mp3;').replace(/^no$/, ''))),\n        mpeg: !!mpegTest,\n        opus: !!audioTest.canPlayType('audio/ogg; codecs=\"opus\"').replace(/^no$/, ''),\n        ogg: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\n        oga: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\n        wav: !!(audioTest.canPlayType('audio/wav; codecs=\"1\"') || audioTest.canPlayType('audio/wav')).replace(/^no$/, ''),\n        aac: !!audioTest.canPlayType('audio/aac;').replace(/^no$/, ''),\n        caf: !!audioTest.canPlayType('audio/x-caf;').replace(/^no$/, ''),\n        m4a: !!(audioTest.canPlayType('audio/x-m4a;') || audioTest.canPlayType('audio/m4a;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        m4b: !!(audioTest.canPlayType('audio/x-m4b;') || audioTest.canPlayType('audio/m4b;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        mp4: !!(audioTest.canPlayType('audio/x-mp4;') || audioTest.canPlayType('audio/mp4;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        weba: !!(!isOldSafari && audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, '')),\n        webm: !!(!isOldSafari && audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, '')),\n        dolby: !!audioTest.canPlayType('audio/mp4; codecs=\"ec-3\"').replace(/^no$/, ''),\n        flac: !!(audioTest.canPlayType('audio/x-flac;') || audioTest.canPlayType('audio/flac;')).replace(/^no$/, '')\n      };\n\n      return self;\n    },\n\n    /**\n     * Some browsers/devices will only allow audio to be played after a user interaction.\n     * Attempt to automatically unlock audio on the first user interaction.\n     * Concept from: http://paulbakaus.com/tutorials/html5/web-audio-on-ios/\n     * @return {Howler}\n     */\n    _unlockAudio: function() {\n      var self = this || Howler;\n\n      // Only run this if Web Audio is supported and it hasn't already been unlocked.\n      if (self._audioUnlocked || !self.ctx) {\n        return;\n      }\n\n      self._audioUnlocked = false;\n      self.autoUnlock = false;\n\n      // Some mobile devices/platforms have distortion issues when opening/closing tabs and/or web views.\n      // Bugs in the browser (especially Mobile Safari) can cause the sampleRate to change from 44100 to 48000.\n      // By calling Howler.unload(), we create a new AudioContext with the correct sampleRate.\n      if (!self._mobileUnloaded && self.ctx.sampleRate !== 44100) {\n        self._mobileUnloaded = true;\n        self.unload();\n      }\n\n      // Scratch buffer for enabling iOS to dispose of web audio buffers correctly, as per:\n      // http://stackoverflow.com/questions/24119684\n      self._scratchBuffer = self.ctx.createBuffer(1, 1, 22050);\n\n      // Call this method on touch start to create and play a buffer,\n      // then check if the audio actually played to determine if\n      // audio has now been unlocked on iOS, Android, etc.\n      var unlock = function(e) {\n        // Create a pool of unlocked HTML5 Audio objects that can\n        // be used for playing sounds without user interaction. HTML5\n        // Audio objects must be individually unlocked, as opposed\n        // to the WebAudio API which only needs a single activation.\n        // This must occur before WebAudio setup or the source.onended\n        // event will not fire.\n        while (self._html5AudioPool.length < self.html5PoolSize) {\n          try {\n            var audioNode = new Audio();\n\n            // Mark this Audio object as unlocked to ensure it can get returned\n            // to the unlocked pool when released.\n            audioNode._unlocked = true;\n\n            // Add the audio node to the pool.\n            self._releaseHtml5Audio(audioNode);\n          } catch (e) {\n            self.noAudio = true;\n            break;\n          }\n        }\n\n        // Loop through any assigned audio nodes and unlock them.\n        for (var i=0; i<self._howls.length; i++) {\n          if (!self._howls[i]._webAudio) {\n            // Get all of the sounds in this Howl group.\n            var ids = self._howls[i]._getSoundIds();\n\n            // Loop through all sounds and unlock the audio nodes.\n            for (var j=0; j<ids.length; j++) {\n              var sound = self._howls[i]._soundById(ids[j]);\n\n              if (sound && sound._node && !sound._node._unlocked) {\n                sound._node._unlocked = true;\n                sound._node.load();\n              }\n            }\n          }\n        }\n\n        // Fix Android can not play in suspend state.\n        self._autoResume();\n\n        // Create an empty buffer.\n        var source = self.ctx.createBufferSource();\n        source.buffer = self._scratchBuffer;\n        source.connect(self.ctx.destination);\n\n        // Play the empty buffer.\n        if (typeof source.start === 'undefined') {\n          source.noteOn(0);\n        } else {\n          source.start(0);\n        }\n\n        // Calling resume() on a stack initiated by user gesture is what actually unlocks the audio on Android Chrome >= 55.\n        if (typeof self.ctx.resume === 'function') {\n          self.ctx.resume();\n        }\n\n        // Setup a timeout to check that we are unlocked on the next event loop.\n        source.onended = function() {\n          source.disconnect(0);\n\n          // Update the unlocked state and prevent this check from happening again.\n          self._audioUnlocked = true;\n\n          // Remove the touch start listener.\n          document.removeEventListener('touchstart', unlock, true);\n          document.removeEventListener('touchend', unlock, true);\n          document.removeEventListener('click', unlock, true);\n          document.removeEventListener('keydown', unlock, true);\n\n          // Let all sounds know that audio has been unlocked.\n          for (var i=0; i<self._howls.length; i++) {\n            self._howls[i]._emit('unlock');\n          }\n        };\n      };\n\n      // Setup a touch start listener to attempt an unlock in.\n      document.addEventListener('touchstart', unlock, true);\n      document.addEventListener('touchend', unlock, true);\n      document.addEventListener('click', unlock, true);\n      document.addEventListener('keydown', unlock, true);\n\n      return self;\n    },\n\n    /**\n     * Get an unlocked HTML5 Audio object from the pool. If none are left,\n     * return a new Audio object and throw a warning.\n     * @return {Audio} HTML5 Audio object.\n     */\n    _obtainHtml5Audio: function() {\n      var self = this || Howler;\n\n      // Return the next object from the pool if one exists.\n      if (self._html5AudioPool.length) {\n        return self._html5AudioPool.pop();\n      }\n\n      //.Check if the audio is locked and throw a warning.\n      var testPlay = new Audio().play();\n      if (testPlay && typeof Promise !== 'undefined' && (testPlay instanceof Promise || typeof testPlay.then === 'function')) {\n        testPlay.catch(function() {\n          console.warn('HTML5 Audio pool exhausted, returning potentially locked audio object.');\n        });\n      }\n\n      return new Audio();\n    },\n\n    /**\n     * Return an activated HTML5 Audio object to the pool.\n     * @return {Howler}\n     */\n    _releaseHtml5Audio: function(audio) {\n      var self = this || Howler;\n\n      // Don't add audio to the pool if we don't know if it has been unlocked.\n      if (audio._unlocked) {\n        self._html5AudioPool.push(audio);\n      }\n\n      return self;\n    },\n\n    /**\n     * Automatically suspend the Web Audio AudioContext after no sound has played for 30 seconds.\n     * This saves processing/energy and fixes various browser-specific bugs with audio getting stuck.\n     * @return {Howler}\n     */\n    _autoSuspend: function() {\n      var self = this;\n\n      if (!self.autoSuspend || !self.ctx || typeof self.ctx.suspend === 'undefined' || !Howler.usingWebAudio) {\n        return;\n      }\n\n      // Check if any sounds are playing.\n      for (var i=0; i<self._howls.length; i++) {\n        if (self._howls[i]._webAudio) {\n          for (var j=0; j<self._howls[i]._sounds.length; j++) {\n            if (!self._howls[i]._sounds[j]._paused) {\n              return self;\n            }\n          }\n        }\n      }\n\n      if (self._suspendTimer) {\n        clearTimeout(self._suspendTimer);\n      }\n\n      // If no sound has played after 30 seconds, suspend the context.\n      self._suspendTimer = setTimeout(function() {\n        if (!self.autoSuspend) {\n          return;\n        }\n\n        self._suspendTimer = null;\n        self.state = 'suspending';\n\n        // Handle updating the state of the audio context after suspending.\n        var handleSuspension = function() {\n          self.state = 'suspended';\n\n          if (self._resumeAfterSuspend) {\n            delete self._resumeAfterSuspend;\n            self._autoResume();\n          }\n        };\n\n        // Either the state gets suspended or it is interrupted.\n        // Either way, we need to update the state to suspended.\n        self.ctx.suspend().then(handleSuspension, handleSuspension);\n      }, 30000);\n\n      return self;\n    },\n\n    /**\n     * Automatically resume the Web Audio AudioContext when a new sound is played.\n     * @return {Howler}\n     */\n    _autoResume: function() {\n      var self = this;\n\n      if (!self.ctx || typeof self.ctx.resume === 'undefined' || !Howler.usingWebAudio) {\n        return;\n      }\n\n      if (self.state === 'running' && self.ctx.state !== 'interrupted' && self._suspendTimer) {\n        clearTimeout(self._suspendTimer);\n        self._suspendTimer = null;\n      } else if (self.state === 'suspended' || self.state === 'running' && self.ctx.state === 'interrupted') {\n        self.ctx.resume().then(function() {\n          self.state = 'running';\n\n          // Emit to all Howls that the audio has resumed.\n          for (var i=0; i<self._howls.length; i++) {\n            self._howls[i]._emit('resume');\n          }\n        });\n\n        if (self._suspendTimer) {\n          clearTimeout(self._suspendTimer);\n          self._suspendTimer = null;\n        }\n      } else if (self.state === 'suspending') {\n        self._resumeAfterSuspend = true;\n      }\n\n      return self;\n    }\n  };\n\n  // Setup the global audio controller.\n  var Howler = new HowlerGlobal();\n\n  /** Group Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create an audio group controller.\n   * @param {Object} o Passed in properties for this group.\n   */\n  var Howl = function(o) {\n    var self = this;\n\n    // Throw an error if no source is provided.\n    if (!o.src || o.src.length === 0) {\n      console.error('An array of source files must be passed with any new Howl.');\n      return;\n    }\n\n    self.init(o);\n  };\n  Howl.prototype = {\n    /**\n     * Initialize a new Howl group object.\n     * @param  {Object} o Passed in properties for this group.\n     * @return {Howl}\n     */\n    init: function(o) {\n      var self = this;\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!Howler.ctx) {\n        setupAudioContext();\n      }\n\n      // Setup user-defined default properties.\n      self._autoplay = o.autoplay || false;\n      self._format = (typeof o.format !== 'string') ? o.format : [o.format];\n      self._html5 = o.html5 || false;\n      self._muted = o.mute || false;\n      self._loop = o.loop || false;\n      self._pool = o.pool || 5;\n      self._preload = (typeof o.preload === 'boolean' || o.preload === 'metadata') ? o.preload : true;\n      self._rate = o.rate || 1;\n      self._sprite = o.sprite || {};\n      self._src = (typeof o.src !== 'string') ? o.src : [o.src];\n      self._volume = o.volume !== undefined ? o.volume : 1;\n      self._xhr = {\n        method: o.xhr && o.xhr.method ? o.xhr.method : 'GET',\n        headers: o.xhr && o.xhr.headers ? o.xhr.headers : null,\n        withCredentials: o.xhr && o.xhr.withCredentials ? o.xhr.withCredentials : false,\n      };\n\n      // Setup all other default properties.\n      self._duration = 0;\n      self._state = 'unloaded';\n      self._sounds = [];\n      self._endTimers = {};\n      self._queue = [];\n      self._playLock = false;\n\n      // Setup event listeners.\n      self._onend = o.onend ? [{fn: o.onend}] : [];\n      self._onfade = o.onfade ? [{fn: o.onfade}] : [];\n      self._onload = o.onload ? [{fn: o.onload}] : [];\n      self._onloaderror = o.onloaderror ? [{fn: o.onloaderror}] : [];\n      self._onplayerror = o.onplayerror ? [{fn: o.onplayerror}] : [];\n      self._onpause = o.onpause ? [{fn: o.onpause}] : [];\n      self._onplay = o.onplay ? [{fn: o.onplay}] : [];\n      self._onstop = o.onstop ? [{fn: o.onstop}] : [];\n      self._onmute = o.onmute ? [{fn: o.onmute}] : [];\n      self._onvolume = o.onvolume ? [{fn: o.onvolume}] : [];\n      self._onrate = o.onrate ? [{fn: o.onrate}] : [];\n      self._onseek = o.onseek ? [{fn: o.onseek}] : [];\n      self._onunlock = o.onunlock ? [{fn: o.onunlock}] : [];\n      self._onresume = [];\n\n      // Web Audio or HTML5 Audio?\n      self._webAudio = Howler.usingWebAudio && !self._html5;\n\n      // Automatically try to enable audio.\n      if (typeof Howler.ctx !== 'undefined' && Howler.ctx && Howler.autoUnlock) {\n        Howler._unlockAudio();\n      }\n\n      // Keep track of this Howl group in the global controller.\n      Howler._howls.push(self);\n\n      // If they selected autoplay, add a play event to the load queue.\n      if (self._autoplay) {\n        self._queue.push({\n          event: 'play',\n          action: function() {\n            self.play();\n          }\n        });\n      }\n\n      // Load the source file unless otherwise specified.\n      if (self._preload && self._preload !== 'none') {\n        self.load();\n      }\n\n      return self;\n    },\n\n    /**\n     * Load the audio file.\n     * @return {Howler}\n     */\n    load: function() {\n      var self = this;\n      var url = null;\n\n      // If no audio is available, quit immediately.\n      if (Howler.noAudio) {\n        self._emit('loaderror', null, 'No audio support.');\n        return;\n      }\n\n      // Make sure our source is in an array.\n      if (typeof self._src === 'string') {\n        self._src = [self._src];\n      }\n\n      // Loop through the sources and pick the first one that is compatible.\n      for (var i=0; i<self._src.length; i++) {\n        var ext, str;\n\n        if (self._format && self._format[i]) {\n          // If an extension was specified, use that instead.\n          ext = self._format[i];\n        } else {\n          // Make sure the source is a string.\n          str = self._src[i];\n          if (typeof str !== 'string') {\n            self._emit('loaderror', null, 'Non-string found in selected audio sources - ignoring.');\n            continue;\n          }\n\n          // Extract the file extension from the URL or base64 data URI.\n          ext = /^data:audio\\/([^;,]+);/i.exec(str);\n          if (!ext) {\n            ext = /\\.([^.]+)$/.exec(str.split('?', 1)[0]);\n          }\n\n          if (ext) {\n            ext = ext[1].toLowerCase();\n          }\n        }\n\n        // Log a warning if no extension was found.\n        if (!ext) {\n          console.warn('No file extension was found. Consider using the \"format\" property or specify an extension.');\n        }\n\n        // Check if this extension is available.\n        if (ext && Howler.codecs(ext)) {\n          url = self._src[i];\n          break;\n        }\n      }\n\n      if (!url) {\n        self._emit('loaderror', null, 'No codec support for selected audio sources.');\n        return;\n      }\n\n      self._src = url;\n      self._state = 'loading';\n\n      // If the hosting page is HTTPS and the source isn't,\n      // drop down to HTML5 Audio to avoid Mixed Content errors.\n      if (window.location.protocol === 'https:' && url.slice(0, 5) === 'http:') {\n        self._html5 = true;\n        self._webAudio = false;\n      }\n\n      // Create a new sound object and add it to the pool.\n      new Sound(self);\n\n      // Load and decode the audio data for playback.\n      if (self._webAudio) {\n        loadBuffer(self);\n      }\n\n      return self;\n    },\n\n    /**\n     * Play a sound or resume previous playback.\n     * @param  {String/Number} sprite   Sprite name for sprite playback or sound id to continue previous.\n     * @param  {Boolean} internal Internal Use: true prevents event firing.\n     * @return {Number}          Sound ID.\n     */\n    play: function(sprite, internal) {\n      var self = this;\n      var id = null;\n\n      // Determine if a sprite, sound id or nothing was passed\n      if (typeof sprite === 'number') {\n        id = sprite;\n        sprite = null;\n      } else if (typeof sprite === 'string' && self._state === 'loaded' && !self._sprite[sprite]) {\n        // If the passed sprite doesn't exist, do nothing.\n        return null;\n      } else if (typeof sprite === 'undefined') {\n        // Use the default sound sprite (plays the full audio length).\n        sprite = '__default';\n\n        // Check if there is a single paused sound that isn't ended.\n        // If there is, play that sound. If not, continue as usual.\n        if (!self._playLock) {\n          var num = 0;\n          for (var i=0; i<self._sounds.length; i++) {\n            if (self._sounds[i]._paused && !self._sounds[i]._ended) {\n              num++;\n              id = self._sounds[i]._id;\n            }\n          }\n\n          if (num === 1) {\n            sprite = null;\n          } else {\n            id = null;\n          }\n        }\n      }\n\n      // Get the selected node, or get one from the pool.\n      var sound = id ? self._soundById(id) : self._inactiveSound();\n\n      // If the sound doesn't exist, do nothing.\n      if (!sound) {\n        return null;\n      }\n\n      // Select the sprite definition.\n      if (id && !sprite) {\n        sprite = sound._sprite || '__default';\n      }\n\n      // If the sound hasn't loaded, we must wait to get the audio's duration.\n      // We also need to wait to make sure we don't run into race conditions with\n      // the order of function calls.\n      if (self._state !== 'loaded') {\n        // Set the sprite value on this sound.\n        sound._sprite = sprite;\n\n        // Mark this sound as not ended in case another sound is played before this one loads.\n        sound._ended = false;\n\n        // Add the sound to the queue to be played on load.\n        var soundId = sound._id;\n        self._queue.push({\n          event: 'play',\n          action: function() {\n            self.play(soundId);\n          }\n        });\n\n        return soundId;\n      }\n\n      // Don't play the sound if an id was passed and it is already playing.\n      if (id && !sound._paused) {\n        // Trigger the play event, in order to keep iterating through queue.\n        if (!internal) {\n          self._loadQueue('play');\n        }\n\n        return sound._id;\n      }\n\n      // Make sure the AudioContext isn't suspended, and resume it if it is.\n      if (self._webAudio) {\n        Howler._autoResume();\n      }\n\n      // Determine how long to play for and where to start playing.\n      var seek = Math.max(0, sound._seek > 0 ? sound._seek : self._sprite[sprite][0] / 1000);\n      var duration = Math.max(0, ((self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000) - seek);\n      var timeout = (duration * 1000) / Math.abs(sound._rate);\n      var start = self._sprite[sprite][0] / 1000;\n      var stop = (self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000;\n      sound._sprite = sprite;\n\n      // Mark the sound as ended instantly so that this async playback\n      // doesn't get grabbed by another call to play while this one waits to start.\n      sound._ended = false;\n\n      // Update the parameters of the sound.\n      var setParams = function() {\n        sound._paused = false;\n        sound._seek = seek;\n        sound._start = start;\n        sound._stop = stop;\n        sound._loop = !!(sound._loop || self._sprite[sprite][2]);\n      };\n\n      // End the sound instantly if seek is at the end.\n      if (seek >= stop) {\n        self._ended(sound);\n        return;\n      }\n\n      // Begin the actual playback.\n      var node = sound._node;\n      if (self._webAudio) {\n        // Fire this when the sound is ready to play to begin Web Audio playback.\n        var playWebAudio = function() {\n          self._playLock = false;\n          setParams();\n          self._refreshBuffer(sound);\n\n          // Setup the playback params.\n          var vol = (sound._muted || self._muted) ? 0 : sound._volume;\n          node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n          sound._playStart = Howler.ctx.currentTime;\n\n          // Play the sound using the supported method.\n          if (typeof node.bufferSource.start === 'undefined') {\n            sound._loop ? node.bufferSource.noteGrainOn(0, seek, 86400) : node.bufferSource.noteGrainOn(0, seek, duration);\n          } else {\n            sound._loop ? node.bufferSource.start(0, seek, 86400) : node.bufferSource.start(0, seek, duration);\n          }\n\n          // Start a new timer if none is present.\n          if (timeout !== Infinity) {\n            self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n          }\n\n          if (!internal) {\n            setTimeout(function() {\n              self._emit('play', sound._id);\n              self._loadQueue();\n            }, 0);\n          }\n        };\n\n        if (Howler.state === 'running' && Howler.ctx.state !== 'interrupted') {\n          playWebAudio();\n        } else {\n          self._playLock = true;\n\n          // Wait for the audio context to resume before playing.\n          self.once('resume', playWebAudio);\n\n          // Cancel the end timer.\n          self._clearTimer(sound._id);\n        }\n      } else {\n        // Fire this when the sound is ready to play to begin HTML5 Audio playback.\n        var playHtml5 = function() {\n          node.currentTime = seek;\n          node.muted = sound._muted || self._muted || Howler._muted || node.muted;\n          node.volume = sound._volume * Howler.volume();\n          node.playbackRate = sound._rate;\n\n          // Some browsers will throw an error if this is called without user interaction.\n          try {\n            var play = node.play();\n\n            // Support older browsers that don't support promises, and thus don't have this issue.\n            if (play && typeof Promise !== 'undefined' && (play instanceof Promise || typeof play.then === 'function')) {\n              // Implements a lock to prevent DOMException: The play() request was interrupted by a call to pause().\n              self._playLock = true;\n\n              // Set param values immediately.\n              setParams();\n\n              // Releases the lock and executes queued actions.\n              play\n                .then(function() {\n                  self._playLock = false;\n                  node._unlocked = true;\n                  if (!internal) {\n                    self._emit('play', sound._id);\n                  } else {\n                    self._loadQueue();\n                  }\n                })\n                .catch(function() {\n                  self._playLock = false;\n                  self._emit('playerror', sound._id, 'Playback was unable to start. This is most commonly an issue ' +\n                    'on mobile devices and Chrome where playback was not within a user interaction.');\n\n                  // Reset the ended and paused values.\n                  sound._ended = true;\n                  sound._paused = true;\n                });\n            } else if (!internal) {\n              self._playLock = false;\n              setParams();\n              self._emit('play', sound._id);\n            }\n\n            // Setting rate before playing won't work in IE, so we set it again here.\n            node.playbackRate = sound._rate;\n\n            // If the node is still paused, then we can assume there was a playback issue.\n            if (node.paused) {\n              self._emit('playerror', sound._id, 'Playback was unable to start. This is most commonly an issue ' +\n                'on mobile devices and Chrome where playback was not within a user interaction.');\n              return;\n            }\n\n            // Setup the end timer on sprites or listen for the ended event.\n            if (sprite !== '__default' || sound._loop) {\n              self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n            } else {\n              self._endTimers[sound._id] = function() {\n                // Fire ended on this audio node.\n                self._ended(sound);\n\n                // Clear this listener.\n                node.removeEventListener('ended', self._endTimers[sound._id], false);\n              };\n              node.addEventListener('ended', self._endTimers[sound._id], false);\n            }\n          } catch (err) {\n            self._emit('playerror', sound._id, err);\n          }\n        };\n\n        // If this is streaming audio, make sure the src is set and load again.\n        if (node.src === 'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA') {\n          node.src = self._src;\n          node.load();\n        }\n\n        // Play immediately if ready, or wait for the 'canplaythrough'e vent.\n        var loadedNoReadyState = (window && window.ejecta) || (!node.readyState && Howler._navigator.isCocoonJS);\n        if (node.readyState >= 3 || loadedNoReadyState) {\n          playHtml5();\n        } else {\n          self._playLock = true;\n          self._state = 'loading';\n\n          var listener = function() {\n            self._state = 'loaded';\n            \n            // Begin playback.\n            playHtml5();\n\n            // Clear this listener.\n            node.removeEventListener(Howler._canPlayEvent, listener, false);\n          };\n          node.addEventListener(Howler._canPlayEvent, listener, false);\n\n          // Cancel the end timer.\n          self._clearTimer(sound._id);\n        }\n      }\n\n      return sound._id;\n    },\n\n    /**\n     * Pause playback and save current position.\n     * @param  {Number} id The sound ID (empty to pause all in group).\n     * @return {Howl}\n     */\n    pause: function(id) {\n      var self = this;\n\n      // If the sound hasn't loaded or a play() promise is pending, add it to the load queue to pause when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'pause',\n          action: function() {\n            self.pause(id);\n          }\n        });\n\n        return self;\n      }\n\n      // If no id is passed, get all ID's to be paused.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Clear the end timer.\n        self._clearTimer(ids[i]);\n\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound && !sound._paused) {\n          // Reset the seek position.\n          sound._seek = self.seek(ids[i]);\n          sound._rateSeek = 0;\n          sound._paused = true;\n\n          // Stop currently running fades.\n          self._stopFade(ids[i]);\n\n          if (sound._node) {\n            if (self._webAudio) {\n              // Make sure the sound has been created.\n              if (!sound._node.bufferSource) {\n                continue;\n              }\n\n              if (typeof sound._node.bufferSource.stop === 'undefined') {\n                sound._node.bufferSource.noteOff(0);\n              } else {\n                sound._node.bufferSource.stop(0);\n              }\n\n              // Clean up the buffer source.\n              self._cleanBuffer(sound._node);\n            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\n              sound._node.pause();\n            }\n          }\n        }\n\n        // Fire the pause event, unless `true` is passed as the 2nd argument.\n        if (!arguments[1]) {\n          self._emit('pause', sound ? sound._id : null);\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Stop playback and reset to start.\n     * @param  {Number} id The sound ID (empty to stop all in group).\n     * @param  {Boolean} internal Internal Use: true prevents event firing.\n     * @return {Howl}\n     */\n    stop: function(id, internal) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to stop when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'stop',\n          action: function() {\n            self.stop(id);\n          }\n        });\n\n        return self;\n      }\n\n      // If no id is passed, get all ID's to be stopped.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Clear the end timer.\n        self._clearTimer(ids[i]);\n\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound) {\n          // Reset the seek position.\n          sound._seek = sound._start || 0;\n          sound._rateSeek = 0;\n          sound._paused = true;\n          sound._ended = true;\n\n          // Stop currently running fades.\n          self._stopFade(ids[i]);\n\n          if (sound._node) {\n            if (self._webAudio) {\n              // Make sure the sound's AudioBufferSourceNode has been created.\n              if (sound._node.bufferSource) {\n                if (typeof sound._node.bufferSource.stop === 'undefined') {\n                  sound._node.bufferSource.noteOff(0);\n                } else {\n                  sound._node.bufferSource.stop(0);\n                }\n\n                // Clean up the buffer source.\n                self._cleanBuffer(sound._node);\n              }\n            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\n              sound._node.currentTime = sound._start || 0;\n              sound._node.pause();\n\n              // If this is a live stream, stop download once the audio is stopped.\n              if (sound._node.duration === Infinity) {\n                self._clearSound(sound._node);\n              }\n            }\n          }\n\n          if (!internal) {\n            self._emit('stop', sound._id);\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Mute/unmute a single sound or all sounds in this Howl group.\n     * @param  {Boolean} muted Set to true to mute and false to unmute.\n     * @param  {Number} id    The sound ID to update (omit to mute/unmute all).\n     * @return {Howl}\n     */\n    mute: function(muted, id) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to mute when capable.\n      if (self._state !== 'loaded'|| self._playLock) {\n        self._queue.push({\n          event: 'mute',\n          action: function() {\n            self.mute(muted, id);\n          }\n        });\n\n        return self;\n      }\n\n      // If applying mute/unmute to all sounds, update the group's value.\n      if (typeof id === 'undefined') {\n        if (typeof muted === 'boolean') {\n          self._muted = muted;\n        } else {\n          return self._muted;\n        }\n      }\n\n      // If no id is passed, get all ID's to be muted.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound) {\n          sound._muted = muted;\n\n          // Cancel active fade and set the volume to the end value.\n          if (sound._interval) {\n            self._stopFade(sound._id);\n          }\n\n          if (self._webAudio && sound._node) {\n            sound._node.gain.setValueAtTime(muted ? 0 : sound._volume, Howler.ctx.currentTime);\n          } else if (sound._node) {\n            sound._node.muted = Howler._muted ? true : muted;\n          }\n\n          self._emit('mute', sound._id);\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the volume of this sound or of the Howl group. This method can optionally take 0, 1 or 2 arguments.\n     *   volume() -> Returns the group's volume value.\n     *   volume(id) -> Returns the sound id's current volume.\n     *   volume(vol) -> Sets the volume of all sounds in this Howl group.\n     *   volume(vol, id) -> Sets the volume of passed sound id.\n     * @return {Howl/Number} Returns self or current volume.\n     */\n    volume: function() {\n      var self = this;\n      var args = arguments;\n      var vol, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // Return the value of the groups' volume.\n        return self._volume;\n      } else if (args.length === 1 || args.length === 2 && typeof args[1] === 'undefined') {\n        // First check if this is an ID, and if not, assume it is a new volume.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else {\n          vol = parseFloat(args[0]);\n        }\n      } else if (args.length >= 2) {\n        vol = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // Update the volume or return the current volume.\n      var sound;\n      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\n        // If the sound hasn't loaded, add it to the load queue to change volume when capable.\n        if (self._state !== 'loaded'|| self._playLock) {\n          self._queue.push({\n            event: 'volume',\n            action: function() {\n              self.volume.apply(self, args);\n            }\n          });\n\n          return self;\n        }\n\n        // Set the group volume.\n        if (typeof id === 'undefined') {\n          self._volume = vol;\n        }\n\n        // Update one or all volumes.\n        id = self._getSoundIds(id);\n        for (var i=0; i<id.length; i++) {\n          // Get the sound.\n          sound = self._soundById(id[i]);\n\n          if (sound) {\n            sound._volume = vol;\n\n            // Stop currently running fades.\n            if (!args[2]) {\n              self._stopFade(id[i]);\n            }\n\n            if (self._webAudio && sound._node && !sound._muted) {\n              sound._node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n            } else if (sound._node && !sound._muted) {\n              sound._node.volume = vol * Howler.volume();\n            }\n\n            self._emit('volume', sound._id);\n          }\n        }\n      } else {\n        sound = id ? self._soundById(id) : self._sounds[0];\n        return sound ? sound._volume : 0;\n      }\n\n      return self;\n    },\n\n    /**\n     * Fade a currently playing sound between two volumes (if no id is passed, all sounds will fade).\n     * @param  {Number} from The value to fade from (0.0 to 1.0).\n     * @param  {Number} to   The volume to fade to (0.0 to 1.0).\n     * @param  {Number} len  Time in milliseconds to fade.\n     * @param  {Number} id   The sound id (omit to fade all sounds).\n     * @return {Howl}\n     */\n    fade: function(from, to, len, id) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to fade when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'fade',\n          action: function() {\n            self.fade(from, to, len, id);\n          }\n        });\n\n        return self;\n      }\n\n      // Make sure the to/from/len values are numbers.\n      from = Math.min(Math.max(0, parseFloat(from)), 1);\n      to = Math.min(Math.max(0, parseFloat(to)), 1);\n      len = parseFloat(len);\n\n      // Set the volume to the start position.\n      self.volume(from, id);\n\n      // Fade the volume of one or all sounds.\n      var ids = self._getSoundIds(id);\n      for (var i=0; i<ids.length; i++) {\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        // Create a linear fade or fall back to timeouts with HTML5 Audio.\n        if (sound) {\n          // Stop the previous fade if no sprite is being used (otherwise, volume handles this).\n          if (!id) {\n            self._stopFade(ids[i]);\n          }\n\n          // If we are using Web Audio, let the native methods do the actual fade.\n          if (self._webAudio && !sound._muted) {\n            var currentTime = Howler.ctx.currentTime;\n            var end = currentTime + (len / 1000);\n            sound._volume = from;\n            sound._node.gain.setValueAtTime(from, currentTime);\n            sound._node.gain.linearRampToValueAtTime(to, end);\n          }\n\n          self._startFadeInterval(sound, from, to, len, ids[i], typeof id === 'undefined');\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Starts the internal interval to fade a sound.\n     * @param  {Object} sound Reference to sound to fade.\n     * @param  {Number} from The value to fade from (0.0 to 1.0).\n     * @param  {Number} to   The volume to fade to (0.0 to 1.0).\n     * @param  {Number} len  Time in milliseconds to fade.\n     * @param  {Number} id   The sound id to fade.\n     * @param  {Boolean} isGroup   If true, set the volume on the group.\n     */\n    _startFadeInterval: function(sound, from, to, len, id, isGroup) {\n      var self = this;\n      var vol = from;\n      var diff = to - from;\n      var steps = Math.abs(diff / 0.01);\n      var stepLen = Math.max(4, (steps > 0) ? len / steps : len);\n      var lastTick = Date.now();\n\n      // Store the value being faded to.\n      sound._fadeTo = to;\n\n      // Update the volume value on each interval tick.\n      sound._interval = setInterval(function() {\n        // Update the volume based on the time since the last tick.\n        var tick = (Date.now() - lastTick) / len;\n        lastTick = Date.now();\n        vol += diff * tick;\n\n        // Round to within 2 decimal points.\n        vol = Math.round(vol * 100) / 100;\n\n        // Make sure the volume is in the right bounds.\n        if (diff < 0) {\n          vol = Math.max(to, vol);\n        } else {\n          vol = Math.min(to, vol);\n        }\n\n        // Change the volume.\n        if (self._webAudio) {\n          sound._volume = vol;\n        } else {\n          self.volume(vol, sound._id, true);\n        }\n\n        // Set the group's volume.\n        if (isGroup) {\n          self._volume = vol;\n        }\n\n        // When the fade is complete, stop it and fire event.\n        if ((to < from && vol <= to) || (to > from && vol >= to)) {\n          clearInterval(sound._interval);\n          sound._interval = null;\n          sound._fadeTo = null;\n          self.volume(to, sound._id);\n          self._emit('fade', sound._id);\n        }\n      }, stepLen);\n    },\n\n    /**\n     * Internal method that stops the currently playing fade when\n     * a new fade starts, volume is changed or the sound is stopped.\n     * @param  {Number} id The sound id.\n     * @return {Howl}\n     */\n    _stopFade: function(id) {\n      var self = this;\n      var sound = self._soundById(id);\n\n      if (sound && sound._interval) {\n        if (self._webAudio) {\n          sound._node.gain.cancelScheduledValues(Howler.ctx.currentTime);\n        }\n\n        clearInterval(sound._interval);\n        sound._interval = null;\n        self.volume(sound._fadeTo, id);\n        sound._fadeTo = null;\n        self._emit('fade', id);\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the loop parameter on a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   loop() -> Returns the group's loop value.\n     *   loop(id) -> Returns the sound id's loop value.\n     *   loop(loop) -> Sets the loop value for all sounds in this Howl group.\n     *   loop(loop, id) -> Sets the loop value of passed sound id.\n     * @return {Howl/Boolean} Returns self or current loop value.\n     */\n    loop: function() {\n      var self = this;\n      var args = arguments;\n      var loop, id, sound;\n\n      // Determine the values for loop and id.\n      if (args.length === 0) {\n        // Return the grou's loop value.\n        return self._loop;\n      } else if (args.length === 1) {\n        if (typeof args[0] === 'boolean') {\n          loop = args[0];\n          self._loop = loop;\n        } else {\n          // Return this sound's loop value.\n          sound = self._soundById(parseInt(args[0], 10));\n          return sound ? sound._loop : false;\n        }\n      } else if (args.length === 2) {\n        loop = args[0];\n        id = parseInt(args[1], 10);\n      }\n\n      // If no id is passed, get all ID's to be looped.\n      var ids = self._getSoundIds(id);\n      for (var i=0; i<ids.length; i++) {\n        sound = self._soundById(ids[i]);\n\n        if (sound) {\n          sound._loop = loop;\n          if (self._webAudio && sound._node && sound._node.bufferSource) {\n            sound._node.bufferSource.loop = loop;\n            if (loop) {\n              sound._node.bufferSource.loopStart = sound._start || 0;\n              sound._node.bufferSource.loopEnd = sound._stop;\n\n              // If playing, restart playback to ensure looping updates.\n              if (self.playing(ids[i])) {\n                self.pause(ids[i], true);\n                self.play(ids[i], true);\n              }\n            }\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the playback rate of a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   rate() -> Returns the first sound node's current playback rate.\n     *   rate(id) -> Returns the sound id's current playback rate.\n     *   rate(rate) -> Sets the playback rate of all sounds in this Howl group.\n     *   rate(rate, id) -> Sets the playback rate of passed sound id.\n     * @return {Howl/Number} Returns self or the current playback rate.\n     */\n    rate: function() {\n      var self = this;\n      var args = arguments;\n      var rate, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // We will simply return the current rate of the first node.\n        id = self._sounds[0]._id;\n      } else if (args.length === 1) {\n        // First check if this is an ID, and if not, assume it is a new rate value.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else {\n          rate = parseFloat(args[0]);\n        }\n      } else if (args.length === 2) {\n        rate = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // Update the playback rate or return the current value.\n      var sound;\n      if (typeof rate === 'number') {\n        // If the sound hasn't loaded, add it to the load queue to change playback rate when capable.\n        if (self._state !== 'loaded' || self._playLock) {\n          self._queue.push({\n            event: 'rate',\n            action: function() {\n              self.rate.apply(self, args);\n            }\n          });\n\n          return self;\n        }\n\n        // Set the group rate.\n        if (typeof id === 'undefined') {\n          self._rate = rate;\n        }\n\n        // Update one or all volumes.\n        id = self._getSoundIds(id);\n        for (var i=0; i<id.length; i++) {\n          // Get the sound.\n          sound = self._soundById(id[i]);\n\n          if (sound) {\n            // Keep track of our position when the rate changed and update the playback\n            // start position so we can properly adjust the seek position for time elapsed.\n            if (self.playing(id[i])) {\n              sound._rateSeek = self.seek(id[i]);\n              sound._playStart = self._webAudio ? Howler.ctx.currentTime : sound._playStart;\n            }\n            sound._rate = rate;\n\n            // Change the playback rate.\n            if (self._webAudio && sound._node && sound._node.bufferSource) {\n              sound._node.bufferSource.playbackRate.setValueAtTime(rate, Howler.ctx.currentTime);\n            } else if (sound._node) {\n              sound._node.playbackRate = rate;\n            }\n\n            // Reset the timers.\n            var seek = self.seek(id[i]);\n            var duration = ((self._sprite[sound._sprite][0] + self._sprite[sound._sprite][1]) / 1000) - seek;\n            var timeout = (duration * 1000) / Math.abs(sound._rate);\n\n            // Start a new end timer if sound is already playing.\n            if (self._endTimers[id[i]] || !sound._paused) {\n              self._clearTimer(id[i]);\n              self._endTimers[id[i]] = setTimeout(self._ended.bind(self, sound), timeout);\n            }\n\n            self._emit('rate', sound._id);\n          }\n        }\n      } else {\n        sound = self._soundById(id);\n        return sound ? sound._rate : self._rate;\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the seek position of a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   seek() -> Returns the first sound node's current seek position.\n     *   seek(id) -> Returns the sound id's current seek position.\n     *   seek(seek) -> Sets the seek position of the first sound node.\n     *   seek(seek, id) -> Sets the seek position of passed sound id.\n     * @return {Howl/Number} Returns self or the current seek position.\n     */\n    seek: function() {\n      var self = this;\n      var args = arguments;\n      var seek, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // We will simply return the current position of the first node.\n        if (self._sounds.length) {\n          id = self._sounds[0]._id;\n        }\n      } else if (args.length === 1) {\n        // First check if this is an ID, and if not, assume it is a new seek position.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else if (self._sounds.length) {\n          id = self._sounds[0]._id;\n          seek = parseFloat(args[0]);\n        }\n      } else if (args.length === 2) {\n        seek = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // If there is no ID, bail out.\n      if (typeof id === 'undefined') {\n        return 0;\n      }\n\n      // If the sound hasn't loaded, add it to the load queue to seek when capable.\n      if (typeof seek === 'number' && (self._state !== 'loaded' || self._playLock)) {\n        self._queue.push({\n          event: 'seek',\n          action: function() {\n            self.seek.apply(self, args);\n          }\n        });\n\n        return self;\n      }\n\n      // Get the sound.\n      var sound = self._soundById(id);\n\n      if (sound) {\n        if (typeof seek === 'number' && seek >= 0) {\n          // Pause the sound and update position for restarting playback.\n          var playing = self.playing(id);\n          if (playing) {\n            self.pause(id, true);\n          }\n\n          // Move the position of the track and cancel timer.\n          sound._seek = seek;\n          sound._ended = false;\n          self._clearTimer(id);\n\n          // Update the seek position for HTML5 Audio.\n          if (!self._webAudio && sound._node && !isNaN(sound._node.duration)) {\n            sound._node.currentTime = seek;\n          }\n\n          // Seek and emit when ready.\n          var seekAndEmit = function() {\n            // Restart the playback if the sound was playing.\n            if (playing) {\n              self.play(id, true);\n            }\n\n            self._emit('seek', id);\n          };\n\n          // Wait for the play lock to be unset before emitting (HTML5 Audio).\n          if (playing && !self._webAudio) {\n            var emitSeek = function() {\n              if (!self._playLock) {\n                seekAndEmit();\n              } else {\n                setTimeout(emitSeek, 0);\n              }\n            };\n            setTimeout(emitSeek, 0);\n          } else {\n            seekAndEmit();\n          }\n        } else {\n          if (self._webAudio) {\n            var realTime = self.playing(id) ? Howler.ctx.currentTime - sound._playStart : 0;\n            var rateSeek = sound._rateSeek ? sound._rateSeek - sound._seek : 0;\n            return sound._seek + (rateSeek + realTime * Math.abs(sound._rate));\n          } else {\n            return sound._node.currentTime;\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Check if a specific sound is currently playing or not (if id is provided), or check if at least one of the sounds in the group is playing or not.\n     * @param  {Number}  id The sound id to check. If none is passed, the whole sound group is checked.\n     * @return {Boolean} True if playing and false if not.\n     */\n    playing: function(id) {\n      var self = this;\n\n      // Check the passed sound ID (if any).\n      if (typeof id === 'number') {\n        var sound = self._soundById(id);\n        return sound ? !sound._paused : false;\n      }\n\n      // Otherwise, loop through all sounds and check if any are playing.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (!self._sounds[i]._paused) {\n          return true;\n        }\n      }\n\n      return false;\n    },\n\n    /**\n     * Get the duration of this sound. Passing a sound id will return the sprite duration.\n     * @param  {Number} id The sound id to check. If none is passed, return full source duration.\n     * @return {Number} Audio duration in seconds.\n     */\n    duration: function(id) {\n      var self = this;\n      var duration = self._duration;\n\n      // If we pass an ID, get the sound and return the sprite length.\n      var sound = self._soundById(id);\n      if (sound) {\n        duration = self._sprite[sound._sprite][1] / 1000;\n      }\n\n      return duration;\n    },\n\n    /**\n     * Returns the current loaded state of this Howl.\n     * @return {String} 'unloaded', 'loading', 'loaded'\n     */\n    state: function() {\n      return this._state;\n    },\n\n    /**\n     * Unload and destroy the current Howl object.\n     * This will immediately stop all sound instances attached to this group.\n     */\n    unload: function() {\n      var self = this;\n\n      // Stop playing any active sounds.\n      var sounds = self._sounds;\n      for (var i=0; i<sounds.length; i++) {\n        // Stop the sound if it is currently playing.\n        if (!sounds[i]._paused) {\n          self.stop(sounds[i]._id);\n        }\n\n        // Remove the source or disconnect.\n        if (!self._webAudio) {\n          // Set the source to 0-second silence to stop any downloading (except in IE).\n          self._clearSound(sounds[i]._node);\n\n          // Remove any event listeners.\n          sounds[i]._node.removeEventListener('error', sounds[i]._errorFn, false);\n          sounds[i]._node.removeEventListener(Howler._canPlayEvent, sounds[i]._loadFn, false);\n          sounds[i]._node.removeEventListener('ended', sounds[i]._endFn, false);\n\n          // Release the Audio object back to the pool.\n          Howler._releaseHtml5Audio(sounds[i]._node);\n        }\n\n        // Empty out all of the nodes.\n        delete sounds[i]._node;\n\n        // Make sure all timers are cleared out.\n        self._clearTimer(sounds[i]._id);\n      }\n\n      // Remove the references in the global Howler object.\n      var index = Howler._howls.indexOf(self);\n      if (index >= 0) {\n        Howler._howls.splice(index, 1);\n      }\n\n      // Delete this sound from the cache (if no other Howl is using it).\n      var remCache = true;\n      for (i=0; i<Howler._howls.length; i++) {\n        if (Howler._howls[i]._src === self._src || self._src.indexOf(Howler._howls[i]._src) >= 0) {\n          remCache = false;\n          break;\n        }\n      }\n\n      if (cache && remCache) {\n        delete cache[self._src];\n      }\n\n      // Clear global errors.\n      Howler.noAudio = false;\n\n      // Clear out `self`.\n      self._state = 'unloaded';\n      self._sounds = [];\n      self = null;\n\n      return null;\n    },\n\n    /**\n     * Listen to a custom event.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to call.\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\n     * @param  {Number}   once  (INTERNAL) Marks event to fire only once.\n     * @return {Howl}\n     */\n    on: function(event, fn, id, once) {\n      var self = this;\n      var events = self['_on' + event];\n\n      if (typeof fn === 'function') {\n        events.push(once ? {id: id, fn: fn, once: once} : {id: id, fn: fn});\n      }\n\n      return self;\n    },\n\n    /**\n     * Remove a custom event. Call without parameters to remove all events.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to remove. Leave empty to remove all.\n     * @param  {Number}   id    (optional) Only remove events for this sound.\n     * @return {Howl}\n     */\n    off: function(event, fn, id) {\n      var self = this;\n      var events = self['_on' + event];\n      var i = 0;\n\n      // Allow passing just an event and ID.\n      if (typeof fn === 'number') {\n        id = fn;\n        fn = null;\n      }\n\n      if (fn || id) {\n        // Loop through event store and remove the passed function.\n        for (i=0; i<events.length; i++) {\n          var isId = (id === events[i].id);\n          if (fn === events[i].fn && isId || !fn && isId) {\n            events.splice(i, 1);\n            break;\n          }\n        }\n      } else if (event) {\n        // Clear out all events of this type.\n        self['_on' + event] = [];\n      } else {\n        // Clear out all events of every type.\n        var keys = Object.keys(self);\n        for (i=0; i<keys.length; i++) {\n          if ((keys[i].indexOf('_on') === 0) && Array.isArray(self[keys[i]])) {\n            self[keys[i]] = [];\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Listen to a custom event and remove it once fired.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to call.\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\n     * @return {Howl}\n     */\n    once: function(event, fn, id) {\n      var self = this;\n\n      // Setup the event listener.\n      self.on(event, fn, id, 1);\n\n      return self;\n    },\n\n    /**\n     * Emit all events of a specific type and pass the sound id.\n     * @param  {String} event Event name.\n     * @param  {Number} id    Sound ID.\n     * @param  {Number} msg   Message to go with event.\n     * @return {Howl}\n     */\n    _emit: function(event, id, msg) {\n      var self = this;\n      var events = self['_on' + event];\n\n      // Loop through event store and fire all functions.\n      for (var i=events.length-1; i>=0; i--) {\n        // Only fire the listener if the correct ID is used.\n        if (!events[i].id || events[i].id === id || event === 'load') {\n          setTimeout(function(fn) {\n            fn.call(this, id, msg);\n          }.bind(self, events[i].fn), 0);\n\n          // If this event was setup with `once`, remove it.\n          if (events[i].once) {\n            self.off(event, events[i].fn, events[i].id);\n          }\n        }\n      }\n\n      // Pass the event type into load queue so that it can continue stepping.\n      self._loadQueue(event);\n\n      return self;\n    },\n\n    /**\n     * Queue of actions initiated before the sound has loaded.\n     * These will be called in sequence, with the next only firing\n     * after the previous has finished executing (even if async like play).\n     * @return {Howl}\n     */\n    _loadQueue: function(event) {\n      var self = this;\n\n      if (self._queue.length > 0) {\n        var task = self._queue[0];\n\n        // Remove this task if a matching event was passed.\n        if (task.event === event) {\n          self._queue.shift();\n          self._loadQueue();\n        }\n\n        // Run the task if no event type is passed.\n        if (!event) {\n          task.action();\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Fired when playback ends at the end of the duration.\n     * @param  {Sound} sound The sound object to work with.\n     * @return {Howl}\n     */\n    _ended: function(sound) {\n      var self = this;\n      var sprite = sound._sprite;\n\n      // If we are using IE and there was network latency we may be clipping\n      // audio before it completes playing. Lets check the node to make sure it\n      // believes it has completed, before ending the playback.\n      if (!self._webAudio && sound._node && !sound._node.paused && !sound._node.ended && sound._node.currentTime < sound._stop) {\n        setTimeout(self._ended.bind(self, sound), 100);\n        return self;\n      }\n\n      // Should this sound loop?\n      var loop = !!(sound._loop || self._sprite[sprite][2]);\n\n      // Fire the ended event.\n      self._emit('end', sound._id);\n\n      // Restart the playback for HTML5 Audio loop.\n      if (!self._webAudio && loop) {\n        self.stop(sound._id, true).play(sound._id);\n      }\n\n      // Restart this timer if on a Web Audio loop.\n      if (self._webAudio && loop) {\n        self._emit('play', sound._id);\n        sound._seek = sound._start || 0;\n        sound._rateSeek = 0;\n        sound._playStart = Howler.ctx.currentTime;\n\n        var timeout = ((sound._stop - sound._start) * 1000) / Math.abs(sound._rate);\n        self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n      }\n\n      // Mark the node as paused.\n      if (self._webAudio && !loop) {\n        sound._paused = true;\n        sound._ended = true;\n        sound._seek = sound._start || 0;\n        sound._rateSeek = 0;\n        self._clearTimer(sound._id);\n\n        // Clean up the buffer source.\n        self._cleanBuffer(sound._node);\n\n        // Attempt to auto-suspend AudioContext if no sounds are still playing.\n        Howler._autoSuspend();\n      }\n\n      // When using a sprite, end the track.\n      if (!self._webAudio && !loop) {\n        self.stop(sound._id, true);\n      }\n\n      return self;\n    },\n\n    /**\n     * Clear the end timer for a sound playback.\n     * @param  {Number} id The sound ID.\n     * @return {Howl}\n     */\n    _clearTimer: function(id) {\n      var self = this;\n\n      if (self._endTimers[id]) {\n        // Clear the timeout or remove the ended listener.\n        if (typeof self._endTimers[id] !== 'function') {\n          clearTimeout(self._endTimers[id]);\n        } else {\n          var sound = self._soundById(id);\n          if (sound && sound._node) {\n            sound._node.removeEventListener('ended', self._endTimers[id], false);\n          }\n        }\n\n        delete self._endTimers[id];\n      }\n\n      return self;\n    },\n\n    /**\n     * Return the sound identified by this ID, or return null.\n     * @param  {Number} id Sound ID\n     * @return {Object}    Sound object or null.\n     */\n    _soundById: function(id) {\n      var self = this;\n\n      // Loop through all sounds and find the one with this ID.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (id === self._sounds[i]._id) {\n          return self._sounds[i];\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * Return an inactive sound from the pool or create a new one.\n     * @return {Sound} Sound playback object.\n     */\n    _inactiveSound: function() {\n      var self = this;\n\n      self._drain();\n\n      // Find the first inactive node to recycle.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (self._sounds[i]._ended) {\n          return self._sounds[i].reset();\n        }\n      }\n\n      // If no inactive node was found, create a new one.\n      return new Sound(self);\n    },\n\n    /**\n     * Drain excess inactive sounds from the pool.\n     */\n    _drain: function() {\n      var self = this;\n      var limit = self._pool;\n      var cnt = 0;\n      var i = 0;\n\n      // If there are less sounds than the max pool size, we are done.\n      if (self._sounds.length < limit) {\n        return;\n      }\n\n      // Count the number of inactive sounds.\n      for (i=0; i<self._sounds.length; i++) {\n        if (self._sounds[i]._ended) {\n          cnt++;\n        }\n      }\n\n      // Remove excess inactive sounds, going in reverse order.\n      for (i=self._sounds.length - 1; i>=0; i--) {\n        if (cnt <= limit) {\n          return;\n        }\n\n        if (self._sounds[i]._ended) {\n          // Disconnect the audio source when using Web Audio.\n          if (self._webAudio && self._sounds[i]._node) {\n            self._sounds[i]._node.disconnect(0);\n          }\n\n          // Remove sounds until we have the pool size.\n          self._sounds.splice(i, 1);\n          cnt--;\n        }\n      }\n    },\n\n    /**\n     * Get all ID's from the sounds pool.\n     * @param  {Number} id Only return one ID if one is passed.\n     * @return {Array}    Array of IDs.\n     */\n    _getSoundIds: function(id) {\n      var self = this;\n\n      if (typeof id === 'undefined') {\n        var ids = [];\n        for (var i=0; i<self._sounds.length; i++) {\n          ids.push(self._sounds[i]._id);\n        }\n\n        return ids;\n      } else {\n        return [id];\n      }\n    },\n\n    /**\n     * Load the sound back into the buffer source.\n     * @param  {Sound} sound The sound object to work with.\n     * @return {Howl}\n     */\n    _refreshBuffer: function(sound) {\n      var self = this;\n\n      // Setup the buffer source for playback.\n      sound._node.bufferSource = Howler.ctx.createBufferSource();\n      sound._node.bufferSource.buffer = cache[self._src];\n\n      // Connect to the correct node.\n      if (sound._panner) {\n        sound._node.bufferSource.connect(sound._panner);\n      } else {\n        sound._node.bufferSource.connect(sound._node);\n      }\n\n      // Setup looping and playback rate.\n      sound._node.bufferSource.loop = sound._loop;\n      if (sound._loop) {\n        sound._node.bufferSource.loopStart = sound._start || 0;\n        sound._node.bufferSource.loopEnd = sound._stop || 0;\n      }\n      sound._node.bufferSource.playbackRate.setValueAtTime(sound._rate, Howler.ctx.currentTime);\n\n      return self;\n    },\n\n    /**\n     * Prevent memory leaks by cleaning up the buffer source after playback.\n     * @param  {Object} node Sound's audio node containing the buffer source.\n     * @return {Howl}\n     */\n    _cleanBuffer: function(node) {\n      var self = this;\n      var isIOS = Howler._navigator && Howler._navigator.vendor.indexOf('Apple') >= 0;\n\n      if (!node.bufferSource) {\n        return self;\n      }\n\n      if (Howler._scratchBuffer && node.bufferSource) {\n        node.bufferSource.onended = null;\n        node.bufferSource.disconnect(0);\n        if (isIOS) {\n          try { node.bufferSource.buffer = Howler._scratchBuffer; } catch(e) {}\n        }\n      }\n      node.bufferSource = null;\n\n      return self;\n    },\n\n    /**\n     * Set the source to a 0-second silence to stop any downloading (except in IE).\n     * @param  {Object} node Audio node to clear.\n     */\n    _clearSound: function(node) {\n      var checkIE = /MSIE |Trident\\//.test(Howler._navigator && Howler._navigator.userAgent);\n      if (!checkIE) {\n        node.src = 'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA';\n      }\n    }\n  };\n\n  /** Single Sound Methods **/\n  /***************************************************************************/\n\n  /**\n   * Setup the sound object, which each node attached to a Howl group is contained in.\n   * @param {Object} howl The Howl parent group.\n   */\n  var Sound = function(howl) {\n    this._parent = howl;\n    this.init();\n  };\n  Sound.prototype = {\n    /**\n     * Initialize a new Sound object.\n     * @return {Sound}\n     */\n    init: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Setup the default parameters.\n      self._muted = parent._muted;\n      self._loop = parent._loop;\n      self._volume = parent._volume;\n      self._rate = parent._rate;\n      self._seek = 0;\n      self._paused = true;\n      self._ended = true;\n      self._sprite = '__default';\n\n      // Generate a unique ID for this sound.\n      self._id = ++Howler._counter;\n\n      // Add itself to the parent's pool.\n      parent._sounds.push(self);\n\n      // Create the new node.\n      self.create();\n\n      return self;\n    },\n\n    /**\n     * Create and setup a new sound object, whether HTML5 Audio or Web Audio.\n     * @return {Sound}\n     */\n    create: function() {\n      var self = this;\n      var parent = self._parent;\n      var volume = (Howler._muted || self._muted || self._parent._muted) ? 0 : self._volume;\n\n      if (parent._webAudio) {\n        // Create the gain node for controlling volume (the source will connect to this).\n        self._node = (typeof Howler.ctx.createGain === 'undefined') ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\n        self._node.gain.setValueAtTime(volume, Howler.ctx.currentTime);\n        self._node.paused = true;\n        self._node.connect(Howler.masterGain);\n      } else if (!Howler.noAudio) {\n        // Get an unlocked Audio object from the pool.\n        self._node = Howler._obtainHtml5Audio();\n\n        // Listen for errors (http://dev.w3.org/html5/spec-author-view/spec.html#mediaerror).\n        self._errorFn = self._errorListener.bind(self);\n        self._node.addEventListener('error', self._errorFn, false);\n\n        // Listen for 'canplaythrough' event to let us know the sound is ready.\n        self._loadFn = self._loadListener.bind(self);\n        self._node.addEventListener(Howler._canPlayEvent, self._loadFn, false);\n\n        // Listen for the 'ended' event on the sound to account for edge-case where\n        // a finite sound has a duration of Infinity.\n        self._endFn = self._endListener.bind(self);\n        self._node.addEventListener('ended', self._endFn, false);\n\n        // Setup the new audio node.\n        self._node.src = parent._src;\n        self._node.preload = parent._preload === true ? 'auto' : parent._preload;\n        self._node.volume = volume * Howler.volume();\n\n        // Begin loading the source.\n        self._node.load();\n      }\n\n      return self;\n    },\n\n    /**\n     * Reset the parameters of this sound to the original state (for recycle).\n     * @return {Sound}\n     */\n    reset: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Reset all of the parameters of this sound.\n      self._muted = parent._muted;\n      self._loop = parent._loop;\n      self._volume = parent._volume;\n      self._rate = parent._rate;\n      self._seek = 0;\n      self._rateSeek = 0;\n      self._paused = true;\n      self._ended = true;\n      self._sprite = '__default';\n\n      // Generate a new ID so that it isn't confused with the previous sound.\n      self._id = ++Howler._counter;\n\n      return self;\n    },\n\n    /**\n     * HTML5 Audio error listener callback.\n     */\n    _errorListener: function() {\n      var self = this;\n\n      // Fire an error event and pass back the code.\n      self._parent._emit('loaderror', self._id, self._node.error ? self._node.error.code : 0);\n\n      // Clear the event listener.\n      self._node.removeEventListener('error', self._errorFn, false);\n    },\n\n    /**\n     * HTML5 Audio canplaythrough listener callback.\n     */\n    _loadListener: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Round up the duration to account for the lower precision in HTML5 Audio.\n      parent._duration = Math.ceil(self._node.duration * 10) / 10;\n\n      // Setup a sprite if none is defined.\n      if (Object.keys(parent._sprite).length === 0) {\n        parent._sprite = {__default: [0, parent._duration * 1000]};\n      }\n\n      if (parent._state !== 'loaded') {\n        parent._state = 'loaded';\n        parent._emit('load');\n        parent._loadQueue();\n      }\n\n      // Clear the event listener.\n      self._node.removeEventListener(Howler._canPlayEvent, self._loadFn, false);\n    },\n\n    /**\n     * HTML5 Audio ended listener callback.\n     */\n    _endListener: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Only handle the `ended`` event if the duration is Infinity.\n      if (parent._duration === Infinity) {\n        // Update the parent duration to match the real audio duration.\n        // Round up the duration to account for the lower precision in HTML5 Audio.\n        parent._duration = Math.ceil(self._node.duration * 10) / 10;\n\n        // Update the sprite that corresponds to the real duration.\n        if (parent._sprite.__default[1] === Infinity) {\n          parent._sprite.__default[1] = parent._duration * 1000;\n        }\n\n        // Run the regular ended method.\n        parent._ended(self);\n      }\n\n      // Clear the event listener since the duration is now correct.\n      self._node.removeEventListener('ended', self._endFn, false);\n    }\n  };\n\n  /** Helper Methods **/\n  /***************************************************************************/\n\n  var cache = {};\n\n  /**\n   * Buffer a sound from URL, Data URI or cache and decode to audio source (Web Audio API).\n   * @param  {Howl} self\n   */\n  var loadBuffer = function(self) {\n    var url = self._src;\n\n    // Check if the buffer has already been cached and use it instead.\n    if (cache[url]) {\n      // Set the duration from the cache.\n      self._duration = cache[url].duration;\n\n      // Load the sound into this Howl.\n      loadSound(self);\n\n      return;\n    }\n\n    if (/^data:[^;]+;base64,/.test(url)) {\n      // Decode the base64 data URI without XHR, since some browsers don't support it.\n      var data = atob(url.split(',')[1]);\n      var dataView = new Uint8Array(data.length);\n      for (var i=0; i<data.length; ++i) {\n        dataView[i] = data.charCodeAt(i);\n      }\n\n      decodeAudioData(dataView.buffer, self);\n    } else {\n      // Load the buffer from the URL.\n      var xhr = new XMLHttpRequest();\n      xhr.open(self._xhr.method, url, true);\n      xhr.withCredentials = self._xhr.withCredentials;\n      xhr.responseType = 'arraybuffer';\n\n      // Apply any custom headers to the request.\n      if (self._xhr.headers) {\n        Object.keys(self._xhr.headers).forEach(function(key) {\n          xhr.setRequestHeader(key, self._xhr.headers[key]);\n        });\n      }\n\n      xhr.onload = function() {\n        // Make sure we get a successful response back.\n        var code = (xhr.status + '')[0];\n        if (code !== '0' && code !== '2' && code !== '3') {\n          self._emit('loaderror', null, 'Failed loading audio file with status: ' + xhr.status + '.');\n          return;\n        }\n\n        decodeAudioData(xhr.response, self);\n      };\n      xhr.onerror = function() {\n        // If there is an error, switch to HTML5 Audio.\n        if (self._webAudio) {\n          self._html5 = true;\n          self._webAudio = false;\n          self._sounds = [];\n          delete cache[url];\n          self.load();\n        }\n      };\n      safeXhrSend(xhr);\n    }\n  };\n\n  /**\n   * Send the XHR request wrapped in a try/catch.\n   * @param  {Object} xhr XHR to send.\n   */\n  var safeXhrSend = function(xhr) {\n    try {\n      xhr.send();\n    } catch (e) {\n      xhr.onerror();\n    }\n  };\n\n  /**\n   * Decode audio data from an array buffer.\n   * @param  {ArrayBuffer} arraybuffer The audio data.\n   * @param  {Howl}        self\n   */\n  var decodeAudioData = function(arraybuffer, self) {\n    // Fire a load error if something broke.\n    var error = function() {\n      self._emit('loaderror', null, 'Decoding audio data failed.');\n    };\n\n    // Load the sound on success.\n    var success = function(buffer) {\n      if (buffer && self._sounds.length > 0) {\n        cache[self._src] = buffer;\n        loadSound(self, buffer);\n      } else {\n        error();\n      }\n    };\n\n    // Decode the buffer into an audio source.\n    if (typeof Promise !== 'undefined' && Howler.ctx.decodeAudioData.length === 1) {\n      Howler.ctx.decodeAudioData(arraybuffer).then(success).catch(error);\n    } else {\n      Howler.ctx.decodeAudioData(arraybuffer, success, error);\n    }\n  }\n\n  /**\n   * Sound is now loaded, so finish setting everything up and fire the loaded event.\n   * @param  {Howl} self\n   * @param  {Object} buffer The decoded buffer sound source.\n   */\n  var loadSound = function(self, buffer) {\n    // Set the duration.\n    if (buffer && !self._duration) {\n      self._duration = buffer.duration;\n    }\n\n    // Setup a sprite if none is defined.\n    if (Object.keys(self._sprite).length === 0) {\n      self._sprite = {__default: [0, self._duration * 1000]};\n    }\n\n    // Fire the loaded event.\n    if (self._state !== 'loaded') {\n      self._state = 'loaded';\n      self._emit('load');\n      self._loadQueue();\n    }\n  };\n\n  /**\n   * Setup the audio context when available, or switch to HTML5 Audio mode.\n   */\n  var setupAudioContext = function() {\n    // If we have already detected that Web Audio isn't supported, don't run this step again.\n    if (!Howler.usingWebAudio) {\n      return;\n    }\n\n    // Check if we are using Web Audio and setup the AudioContext if we are.\n    try {\n      if (typeof AudioContext !== 'undefined') {\n        Howler.ctx = new AudioContext();\n      } else if (typeof webkitAudioContext !== 'undefined') {\n        Howler.ctx = new webkitAudioContext();\n      } else {\n        Howler.usingWebAudio = false;\n      }\n    } catch(e) {\n      Howler.usingWebAudio = false;\n    }\n\n    // If the audio context creation still failed, set using web audio to false.\n    if (!Howler.ctx) {\n      Howler.usingWebAudio = false;\n    }\n\n    // Check if a webview is being used on iOS8 or earlier (rather than the browser).\n    // If it is, disable Web Audio as it causes crashing.\n    var iOS = (/iP(hone|od|ad)/.test(Howler._navigator && Howler._navigator.platform));\n    var appVersion = Howler._navigator && Howler._navigator.appVersion.match(/OS (\\d+)_(\\d+)_?(\\d+)?/);\n    var version = appVersion ? parseInt(appVersion[1], 10) : null;\n    if (iOS && version && version < 9) {\n      var safari = /safari/.test(Howler._navigator && Howler._navigator.userAgent.toLowerCase());\n      if (Howler._navigator && !safari) {\n        Howler.usingWebAudio = false;\n      }\n    }\n\n    // Create and expose the master GainNode when using Web Audio (useful for plugins or advanced usage).\n    if (Howler.usingWebAudio) {\n      Howler.masterGain = (typeof Howler.ctx.createGain === 'undefined') ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\n      Howler.masterGain.gain.setValueAtTime(Howler._muted ? 0 : Howler._volume, Howler.ctx.currentTime);\n      Howler.masterGain.connect(Howler.ctx.destination);\n    }\n\n    // Re-run the setup on Howler.\n    Howler._setup();\n  };\n\n  // Add support for AMD (Asynchronous Module Definition) libraries such as require.js.\n  if (typeof define === 'function' && define.amd) {\n    define([], function() {\n      return {\n        Howler: Howler,\n        Howl: Howl\n      };\n    });\n  }\n\n  // Add support for CommonJS libraries such as browserify.\n  if (typeof exports !== 'undefined') {\n    exports.Howler = Howler;\n    exports.Howl = Howl;\n  }\n\n  // Add to global in Node.js (for testing, etc).\n  if (typeof global !== 'undefined') {\n    global.HowlerGlobal = HowlerGlobal;\n    global.Howler = Howler;\n    global.Howl = Howl;\n    global.Sound = Sound;\n  } else if (typeof window !== 'undefined') {  // Define globally in case AMD is not available or unused.\n    window.HowlerGlobal = HowlerGlobal;\n    window.Howler = Howler;\n    window.Howl = Howl;\n    window.Sound = Sound;\n  }\n})();\n\n\n/*!\n *  Spatial Plugin - Adds support for stereo and 3D audio where Web Audio is supported.\n *  \n *  howler.js v2.2.4\n *  howlerjs.com\n *\n *  (c) 2013-2020, James Simpson of GoldFire Studios\n *  goldfirestudios.com\n *\n *  MIT License\n */\n\n(function() {\n\n  'use strict';\n\n  // Setup default properties.\n  HowlerGlobal.prototype._pos = [0, 0, 0];\n  HowlerGlobal.prototype._orientation = [0, 0, -1, 0, 1, 0];\n\n  /** Global Methods **/\n  /***************************************************************************/\n\n  /**\n   * Helper method to update the stereo panning position of all current Howls.\n   * Future Howls will not use this value unless explicitly set.\n   * @param  {Number} pan A value of -1.0 is all the way left and 1.0 is all the way right.\n   * @return {Howler/Number}     Self or current stereo panning value.\n   */\n  HowlerGlobal.prototype.stereo = function(pan) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Loop through all Howls and update their stereo panning.\n    for (var i=self._howls.length-1; i>=0; i--) {\n      self._howls[i].stereo(pan);\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the position of the listener in 3D cartesian space. Sounds using\n   * 3D position will be relative to the listener's position.\n   * @param  {Number} x The x-position of the listener.\n   * @param  {Number} y The y-position of the listener.\n   * @param  {Number} z The z-position of the listener.\n   * @return {Howler/Array}   Self or current listener position.\n   */\n  HowlerGlobal.prototype.pos = function(x, y, z) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? self._pos[1] : y;\n    z = (typeof z !== 'number') ? self._pos[2] : z;\n\n    if (typeof x === 'number') {\n      self._pos = [x, y, z];\n\n      if (typeof self.ctx.listener.positionX !== 'undefined') {\n        self.ctx.listener.positionX.setTargetAtTime(self._pos[0], Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.positionY.setTargetAtTime(self._pos[1], Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.positionZ.setTargetAtTime(self._pos[2], Howler.ctx.currentTime, 0.1);\n      } else {\n        self.ctx.listener.setPosition(self._pos[0], self._pos[1], self._pos[2]);\n      }\n    } else {\n      return self._pos;\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the direction the listener is pointing in the 3D cartesian space.\n   * A front and up vector must be provided. The front is the direction the\n   * face of the listener is pointing, and up is the direction the top of the\n   * listener is pointing. Thus, these values are expected to be at right angles\n   * from each other.\n   * @param  {Number} x   The x-orientation of the listener.\n   * @param  {Number} y   The y-orientation of the listener.\n   * @param  {Number} z   The z-orientation of the listener.\n   * @param  {Number} xUp The x-orientation of the top of the listener.\n   * @param  {Number} yUp The y-orientation of the top of the listener.\n   * @param  {Number} zUp The z-orientation of the top of the listener.\n   * @return {Howler/Array}     Returns self or the current orientation vectors.\n   */\n  HowlerGlobal.prototype.orientation = function(x, y, z, xUp, yUp, zUp) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    var or = self._orientation;\n    y = (typeof y !== 'number') ? or[1] : y;\n    z = (typeof z !== 'number') ? or[2] : z;\n    xUp = (typeof xUp !== 'number') ? or[3] : xUp;\n    yUp = (typeof yUp !== 'number') ? or[4] : yUp;\n    zUp = (typeof zUp !== 'number') ? or[5] : zUp;\n\n    if (typeof x === 'number') {\n      self._orientation = [x, y, z, xUp, yUp, zUp];\n\n      if (typeof self.ctx.listener.forwardX !== 'undefined') {\n        self.ctx.listener.forwardX.setTargetAtTime(x, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.forwardY.setTargetAtTime(y, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.forwardZ.setTargetAtTime(z, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upX.setTargetAtTime(xUp, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upY.setTargetAtTime(yUp, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upZ.setTargetAtTime(zUp, Howler.ctx.currentTime, 0.1);\n      } else {\n        self.ctx.listener.setOrientation(x, y, z, xUp, yUp, zUp);\n      }\n    } else {\n      return or;\n    }\n\n    return self;\n  };\n\n  /** Group Methods **/\n  /***************************************************************************/\n\n  /**\n   * Add new properties to the core init.\n   * @param  {Function} _super Core init method.\n   * @return {Howl}\n   */\n  Howl.prototype.init = (function(_super) {\n    return function(o) {\n      var self = this;\n\n      // Setup user-defined default properties.\n      self._orientation = o.orientation || [1, 0, 0];\n      self._stereo = o.stereo || null;\n      self._pos = o.pos || null;\n      self._pannerAttr = {\n        coneInnerAngle: typeof o.coneInnerAngle !== 'undefined' ? o.coneInnerAngle : 360,\n        coneOuterAngle: typeof o.coneOuterAngle !== 'undefined' ? o.coneOuterAngle : 360,\n        coneOuterGain: typeof o.coneOuterGain !== 'undefined' ? o.coneOuterGain : 0,\n        distanceModel: typeof o.distanceModel !== 'undefined' ? o.distanceModel : 'inverse',\n        maxDistance: typeof o.maxDistance !== 'undefined' ? o.maxDistance : 10000,\n        panningModel: typeof o.panningModel !== 'undefined' ? o.panningModel : 'HRTF',\n        refDistance: typeof o.refDistance !== 'undefined' ? o.refDistance : 1,\n        rolloffFactor: typeof o.rolloffFactor !== 'undefined' ? o.rolloffFactor : 1\n      };\n\n      // Setup event listeners.\n      self._onstereo = o.onstereo ? [{fn: o.onstereo}] : [];\n      self._onpos = o.onpos ? [{fn: o.onpos}] : [];\n      self._onorientation = o.onorientation ? [{fn: o.onorientation}] : [];\n\n      // Complete initilization with howler.js core's init function.\n      return _super.call(this, o);\n    };\n  })(Howl.prototype.init);\n\n  /**\n   * Get/set the stereo panning of the audio source for this sound or all in the group.\n   * @param  {Number} pan  A value of -1.0 is all the way left and 1.0 is all the way right.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Number}    Returns self or the current stereo panning value.\n   */\n  Howl.prototype.stereo = function(pan, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change stereo pan when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'stereo',\n        action: function() {\n          self.stereo(pan, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Check for PannerStereoNode support and fallback to PannerNode if it doesn't exist.\n    var pannerType = (typeof Howler.ctx.createStereoPanner === 'undefined') ? 'spatial' : 'stereo';\n\n    // Setup the group's stereo panning if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's stereo panning if no parameters are passed.\n      if (typeof pan === 'number') {\n        self._stereo = pan;\n        self._pos = [pan, 0, 0];\n      } else {\n        return self._stereo;\n      }\n    }\n\n    // Change the streo panning of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof pan === 'number') {\n          sound._stereo = pan;\n          sound._pos = [pan, 0, 0];\n\n          if (sound._node) {\n            // If we are falling back, make sure the panningModel is equalpower.\n            sound._pannerAttr.panningModel = 'equalpower';\n\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner || !sound._panner.pan) {\n              setupPanner(sound, pannerType);\n            }\n\n            if (pannerType === 'spatial') {\n              if (typeof sound._panner.positionX !== 'undefined') {\n                sound._panner.positionX.setValueAtTime(pan, Howler.ctx.currentTime);\n                sound._panner.positionY.setValueAtTime(0, Howler.ctx.currentTime);\n                sound._panner.positionZ.setValueAtTime(0, Howler.ctx.currentTime);\n              } else {\n                sound._panner.setPosition(pan, 0, 0);\n              }\n            } else {\n              sound._panner.pan.setValueAtTime(pan, Howler.ctx.currentTime);\n            }\n          }\n\n          self._emit('stereo', sound._id);\n        } else {\n          return sound._stereo;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the 3D spatial position of the audio source for this sound or group relative to the global listener.\n   * @param  {Number} x  The x-position of the audio source.\n   * @param  {Number} y  The y-position of the audio source.\n   * @param  {Number} z  The z-position of the audio source.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Array}    Returns self or the current 3D spatial position: [x, y, z].\n   */\n  Howl.prototype.pos = function(x, y, z, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change position when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'pos',\n        action: function() {\n          self.pos(x, y, z, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? 0 : y;\n    z = (typeof z !== 'number') ? -0.5 : z;\n\n    // Setup the group's spatial position if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's spatial position if no parameters are passed.\n      if (typeof x === 'number') {\n        self._pos = [x, y, z];\n      } else {\n        return self._pos;\n      }\n    }\n\n    // Change the spatial position of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof x === 'number') {\n          sound._pos = [x, y, z];\n\n          if (sound._node) {\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner || sound._panner.pan) {\n              setupPanner(sound, 'spatial');\n            }\n\n            if (typeof sound._panner.positionX !== 'undefined') {\n              sound._panner.positionX.setValueAtTime(x, Howler.ctx.currentTime);\n              sound._panner.positionY.setValueAtTime(y, Howler.ctx.currentTime);\n              sound._panner.positionZ.setValueAtTime(z, Howler.ctx.currentTime);\n            } else {\n              sound._panner.setPosition(x, y, z);\n            }\n          }\n\n          self._emit('pos', sound._id);\n        } else {\n          return sound._pos;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the direction the audio source is pointing in the 3D cartesian coordinate\n   * space. Depending on how direction the sound is, based on the `cone` attributes,\n   * a sound pointing away from the listener can be quiet or silent.\n   * @param  {Number} x  The x-orientation of the source.\n   * @param  {Number} y  The y-orientation of the source.\n   * @param  {Number} z  The z-orientation of the source.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Array}    Returns self or the current 3D spatial orientation: [x, y, z].\n   */\n  Howl.prototype.orientation = function(x, y, z, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change orientation when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'orientation',\n        action: function() {\n          self.orientation(x, y, z, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? self._orientation[1] : y;\n    z = (typeof z !== 'number') ? self._orientation[2] : z;\n\n    // Setup the group's spatial orientation if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's spatial orientation if no parameters are passed.\n      if (typeof x === 'number') {\n        self._orientation = [x, y, z];\n      } else {\n        return self._orientation;\n      }\n    }\n\n    // Change the spatial orientation of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof x === 'number') {\n          sound._orientation = [x, y, z];\n\n          if (sound._node) {\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner) {\n              // Make sure we have a position to setup the node with.\n              if (!sound._pos) {\n                sound._pos = self._pos || [0, 0, -0.5];\n              }\n\n              setupPanner(sound, 'spatial');\n            }\n\n            if (typeof sound._panner.orientationX !== 'undefined') {\n              sound._panner.orientationX.setValueAtTime(x, Howler.ctx.currentTime);\n              sound._panner.orientationY.setValueAtTime(y, Howler.ctx.currentTime);\n              sound._panner.orientationZ.setValueAtTime(z, Howler.ctx.currentTime);\n            } else {\n              sound._panner.setOrientation(x, y, z);\n            }\n          }\n\n          self._emit('orientation', sound._id);\n        } else {\n          return sound._orientation;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the panner node's attributes for a sound or group of sounds.\n   * This method can optionall take 0, 1 or 2 arguments.\n   *   pannerAttr() -> Returns the group's values.\n   *   pannerAttr(id) -> Returns the sound id's values.\n   *   pannerAttr(o) -> Set's the values of all sounds in this Howl group.\n   *   pannerAttr(o, id) -> Set's the values of passed sound id.\n   *\n   *   Attributes:\n   *     coneInnerAngle - (360 by default) A parameter for directional audio sources, this is an angle, in degrees,\n   *                      inside of which there will be no volume reduction.\n   *     coneOuterAngle - (360 by default) A parameter for directional audio sources, this is an angle, in degrees,\n   *                      outside of which the volume will be reduced to a constant value of `coneOuterGain`.\n   *     coneOuterGain - (0 by default) A parameter for directional audio sources, this is the gain outside of the\n   *                     `coneOuterAngle`. It is a linear value in the range `[0, 1]`.\n   *     distanceModel - ('inverse' by default) Determines algorithm used to reduce volume as audio moves away from\n   *                     listener. Can be `linear`, `inverse` or `exponential.\n   *     maxDistance - (10000 by default) The maximum distance between source and listener, after which the volume\n   *                   will not be reduced any further.\n   *     refDistance - (1 by default) A reference distance for reducing volume as source moves further from the listener.\n   *                   This is simply a variable of the distance model and has a different effect depending on which model\n   *                   is used and the scale of your coordinates. Generally, volume will be equal to 1 at this distance.\n   *     rolloffFactor - (1 by default) How quickly the volume reduces as source moves from listener. This is simply a\n   *                     variable of the distance model and can be in the range of `[0, 1]` with `linear` and `[0, ∞]`\n   *                     with `inverse` and `exponential`.\n   *     panningModel - ('HRTF' by default) Determines which spatialization algorithm is used to position audio.\n   *                     Can be `HRTF` or `equalpower`.\n   *\n   * @return {Howl/Object} Returns self or current panner attributes.\n   */\n  Howl.prototype.pannerAttr = function() {\n    var self = this;\n    var args = arguments;\n    var o, id, sound;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // Determine the values based on arguments.\n    if (args.length === 0) {\n      // Return the group's panner attribute values.\n      return self._pannerAttr;\n    } else if (args.length === 1) {\n      if (typeof args[0] === 'object') {\n        o = args[0];\n\n        // Set the grou's panner attribute values.\n        if (typeof id === 'undefined') {\n          if (!o.pannerAttr) {\n            o.pannerAttr = {\n              coneInnerAngle: o.coneInnerAngle,\n              coneOuterAngle: o.coneOuterAngle,\n              coneOuterGain: o.coneOuterGain,\n              distanceModel: o.distanceModel,\n              maxDistance: o.maxDistance,\n              refDistance: o.refDistance,\n              rolloffFactor: o.rolloffFactor,\n              panningModel: o.panningModel\n            };\n          }\n\n          self._pannerAttr = {\n            coneInnerAngle: typeof o.pannerAttr.coneInnerAngle !== 'undefined' ? o.pannerAttr.coneInnerAngle : self._coneInnerAngle,\n            coneOuterAngle: typeof o.pannerAttr.coneOuterAngle !== 'undefined' ? o.pannerAttr.coneOuterAngle : self._coneOuterAngle,\n            coneOuterGain: typeof o.pannerAttr.coneOuterGain !== 'undefined' ? o.pannerAttr.coneOuterGain : self._coneOuterGain,\n            distanceModel: typeof o.pannerAttr.distanceModel !== 'undefined' ? o.pannerAttr.distanceModel : self._distanceModel,\n            maxDistance: typeof o.pannerAttr.maxDistance !== 'undefined' ? o.pannerAttr.maxDistance : self._maxDistance,\n            refDistance: typeof o.pannerAttr.refDistance !== 'undefined' ? o.pannerAttr.refDistance : self._refDistance,\n            rolloffFactor: typeof o.pannerAttr.rolloffFactor !== 'undefined' ? o.pannerAttr.rolloffFactor : self._rolloffFactor,\n            panningModel: typeof o.pannerAttr.panningModel !== 'undefined' ? o.pannerAttr.panningModel : self._panningModel\n          };\n        }\n      } else {\n        // Return this sound's panner attribute values.\n        sound = self._soundById(parseInt(args[0], 10));\n        return sound ? sound._pannerAttr : self._pannerAttr;\n      }\n    } else if (args.length === 2) {\n      o = args[0];\n      id = parseInt(args[1], 10);\n    }\n\n    // Update the values of the specified sounds.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      sound = self._soundById(ids[i]);\n\n      if (sound) {\n        // Merge the new values into the sound.\n        var pa = sound._pannerAttr;\n        pa = {\n          coneInnerAngle: typeof o.coneInnerAngle !== 'undefined' ? o.coneInnerAngle : pa.coneInnerAngle,\n          coneOuterAngle: typeof o.coneOuterAngle !== 'undefined' ? o.coneOuterAngle : pa.coneOuterAngle,\n          coneOuterGain: typeof o.coneOuterGain !== 'undefined' ? o.coneOuterGain : pa.coneOuterGain,\n          distanceModel: typeof o.distanceModel !== 'undefined' ? o.distanceModel : pa.distanceModel,\n          maxDistance: typeof o.maxDistance !== 'undefined' ? o.maxDistance : pa.maxDistance,\n          refDistance: typeof o.refDistance !== 'undefined' ? o.refDistance : pa.refDistance,\n          rolloffFactor: typeof o.rolloffFactor !== 'undefined' ? o.rolloffFactor : pa.rolloffFactor,\n          panningModel: typeof o.panningModel !== 'undefined' ? o.panningModel : pa.panningModel\n        };\n\n        // Create a new panner node if one doesn't already exist.\n        var panner = sound._panner;\n        if (!panner) {\n          // Make sure we have a position to setup the node with.\n          if (!sound._pos) {\n            sound._pos = self._pos || [0, 0, -0.5];\n          }\n\n          // Create a new panner node.\n          setupPanner(sound, 'spatial');\n          panner = sound._panner\n        }\n\n        // Update the panner values or create a new panner if none exists.\n        panner.coneInnerAngle = pa.coneInnerAngle;\n        panner.coneOuterAngle = pa.coneOuterAngle;\n        panner.coneOuterGain = pa.coneOuterGain;\n        panner.distanceModel = pa.distanceModel;\n        panner.maxDistance = pa.maxDistance;\n        panner.refDistance = pa.refDistance;\n        panner.rolloffFactor = pa.rolloffFactor;\n        panner.panningModel = pa.panningModel;\n      }\n    }\n\n    return self;\n  };\n\n  /** Single Sound Methods **/\n  /***************************************************************************/\n\n  /**\n   * Add new properties to the core Sound init.\n   * @param  {Function} _super Core Sound init method.\n   * @return {Sound}\n   */\n  Sound.prototype.init = (function(_super) {\n    return function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Setup user-defined default properties.\n      self._orientation = parent._orientation;\n      self._stereo = parent._stereo;\n      self._pos = parent._pos;\n      self._pannerAttr = parent._pannerAttr;\n\n      // Complete initilization with howler.js core Sound's init function.\n      _super.call(this);\n\n      // If a stereo or position was specified, set it up.\n      if (self._stereo) {\n        parent.stereo(self._stereo);\n      } else if (self._pos) {\n        parent.pos(self._pos[0], self._pos[1], self._pos[2], self._id);\n      }\n    };\n  })(Sound.prototype.init);\n\n  /**\n   * Override the Sound.reset method to clean up properties from the spatial plugin.\n   * @param  {Function} _super Sound reset method.\n   * @return {Sound}\n   */\n  Sound.prototype.reset = (function(_super) {\n    return function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Reset all spatial plugin properties on this sound.\n      self._orientation = parent._orientation;\n      self._stereo = parent._stereo;\n      self._pos = parent._pos;\n      self._pannerAttr = parent._pannerAttr;\n\n      // If a stereo or position was specified, set it up.\n      if (self._stereo) {\n        parent.stereo(self._stereo);\n      } else if (self._pos) {\n        parent.pos(self._pos[0], self._pos[1], self._pos[2], self._id);\n      } else if (self._panner) {\n        // Disconnect the panner.\n        self._panner.disconnect(0);\n        self._panner = undefined;\n        parent._refreshBuffer(self);\n      }\n\n      // Complete resetting of the sound.\n      return _super.call(this);\n    };\n  })(Sound.prototype.reset);\n\n  /** Helper Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create a new panner node and save it on the sound.\n   * @param  {Sound} sound Specific sound to setup panning on.\n   * @param {String} type Type of panner to create: 'stereo' or 'spatial'.\n   */\n  var setupPanner = function(sound, type) {\n    type = type || 'spatial';\n\n    // Create the new panner node.\n    if (type === 'spatial') {\n      sound._panner = Howler.ctx.createPanner();\n      sound._panner.coneInnerAngle = sound._pannerAttr.coneInnerAngle;\n      sound._panner.coneOuterAngle = sound._pannerAttr.coneOuterAngle;\n      sound._panner.coneOuterGain = sound._pannerAttr.coneOuterGain;\n      sound._panner.distanceModel = sound._pannerAttr.distanceModel;\n      sound._panner.maxDistance = sound._pannerAttr.maxDistance;\n      sound._panner.refDistance = sound._pannerAttr.refDistance;\n      sound._panner.rolloffFactor = sound._pannerAttr.rolloffFactor;\n      sound._panner.panningModel = sound._pannerAttr.panningModel;\n\n      if (typeof sound._panner.positionX !== 'undefined') {\n        sound._panner.positionX.setValueAtTime(sound._pos[0], Howler.ctx.currentTime);\n        sound._panner.positionY.setValueAtTime(sound._pos[1], Howler.ctx.currentTime);\n        sound._panner.positionZ.setValueAtTime(sound._pos[2], Howler.ctx.currentTime);\n      } else {\n        sound._panner.setPosition(sound._pos[0], sound._pos[1], sound._pos[2]);\n      }\n\n      if (typeof sound._panner.orientationX !== 'undefined') {\n        sound._panner.orientationX.setValueAtTime(sound._orientation[0], Howler.ctx.currentTime);\n        sound._panner.orientationY.setValueAtTime(sound._orientation[1], Howler.ctx.currentTime);\n        sound._panner.orientationZ.setValueAtTime(sound._orientation[2], Howler.ctx.currentTime);\n      } else {\n        sound._panner.setOrientation(sound._orientation[0], sound._orientation[1], sound._orientation[2]);\n      }\n    } else {\n      sound._panner = Howler.ctx.createStereoPanner();\n      sound._panner.pan.setValueAtTime(sound._stereo, Howler.ctx.currentTime);\n    }\n\n    sound._panner.connect(sound._node);\n\n    // Update the connections.\n    if (!sound._paused) {\n      sound._parent.pause(sound._id, true).play(sound._id, true);\n    }\n  };\n})();\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export const saveToLocalStorage = (data) => {\r\n\r\n    //generate a number/ id for each of the player\r\n    data.forEach((item, i) => {\r\n        //then match that id to the player\r\n        item.playerId = i + 1;\r\n    });\r\n\r\n    //push the data to an array in localstorage\r\n    localStorage.setItem('player', JSON.stringify(data));\r\n}\r\n\r\nexport const updatePlay = (playing, id) => {\r\n\r\n    const retrievedString = localStorage.getItem(\"player\");\r\n    const parsedObject = JSON.parse(retrievedString);\r\n    let playedAudio = parsedObject.filter((x) => x.id === id)\r\n    playedAudio[0].playing = playing\r\n    // console.log(parsedObject)\r\n    localStorage.setItem('player', JSON.stringify(parsedObject));\r\n}\r\n//we can always manipute the player based on its data\r\n\r\n//play and pause the rest\r\n\r\n//play and reduce volume of the rest\r\nexport const setVolume = (id) => {\r\n    const retrievedString = localStorage.getItem(\"player\");\r\n    const parsedObject = JSON.parse(retrievedString);\r\n\r\n    // mode oneplayer at time\r\n    let playedAudio = parsedObject.filter((x) => x.id === id && x.playing === \"playing\")\r\n    let othersAudio = parsedObject.filter((x) => x.id !== id)\r\n\r\n    //setvolume to 100% and others to 50%\r\n    playedAudio[0].volume = 1\r\n    for (let i = 0; i < playedAudio.length; i++) {\r\n        othersAudio[i].volume = 0.5\r\n    }\r\n    console.log(parsedObject)\r\n    localStorage.setItem('player', JSON.stringify(parsedObject));\r\n\r\n    //mode= volumeincrease\r\n    if (id === playedAudio[0].id) {\r\n        return 1\r\n    } else {\r\n        return 0\r\n    }\r\n}\r\n\r\nexport const getId = (id) => {\r\n    const retrievedString = localStorage.getItem(\"player\");\r\n    const parsedObject = JSON.parse(retrievedString);\r\n\r\n    // check id && playing\r\n    let playedAudio = parsedObject.filter((x) => x.id === id && x.playing === \"playing\")\r\n    // let othersAudio = parsedObject.filter((x) => x.id !== id)\r\n\r\n    console.log(parsedObject)\r\n    localStorage.setItem('player', JSON.stringify(parsedObject));\r\n    if (playedAudio) {\r\n        return true\r\n    } else {\r\n        return false\r\n    }\r\n\r\n}\r\n\r\n","import { Howl, Howler } from 'howler';\r\nimport { styles } from './styles';\r\nimport { getId, saveToLocalStorage, setVolume, updatePlay } from './MediaController';\r\nlet player = []\r\n//console.log(\"Player is hot and ready to role\")\r\nexport default class MediaPlayer {\r\n    constructor({ position = 'bottom-right',\r\n        BackgroundColor = \"black\",\r\n        ButtonColor = \"white\",\r\n        ButtonShape = \"rounded\",\r\n        Mode = \"normal\",\r\n        Img = \"./assets/img1.png\",\r\n        Url = \"./audio/1.mp3\",\r\n        HtmlId = \"player1\",\r\n        Volume = 50,\r\n        Theme\r\n    }) {\r\n\r\n        this.position = this.getPosition(position);\r\n        this.open = false;\r\n        this.backgroundColor = BackgroundColor;\r\n        this.buttonColor = ButtonColor;\r\n        this.buttonShape = ButtonShape;\r\n        this.img = Img;\r\n        this.mode = Mode;\r\n        this.url = Url;\r\n        this.id = HtmlId;\r\n        this.theme = Theme;\r\n        this.volume = Volume / 100;\r\n        this.playing = \"not playing\";\r\n        this.initialise();\r\n        this.createStyles();\r\n    }\r\n    getPosition(position) {\r\n        const [vertical, horizontal] = position.split('-');\r\n        return {\r\n            [vertical]: '30px',\r\n            [horizontal]: '30px',\r\n        };\r\n    }\r\n\r\n    initialise() {\r\n        console.log(`Currently have ${player.length + 1} playing`)\r\n        player.push({ volume: this.volume, playing: this.playing, butttonColor: this.buttonColor, background: this.backgroundColor, id: this.id, media: this.url })\r\n        saveToLocalStorage(player)\r\n\r\n        this.howlPlayer = new Howl({\r\n            src: [this.url],\r\n           // html5: true, // Force to HTML5 so that the audio can stream in (best for large files).\r\n            volume: this.volume,\r\n            onend: function () {\r\n                // Change pause to play.\r\n\r\n                //   this.play.classList.remove('pause');\r\n                //   this.play.classList.add('play');\r\n            },\r\n        });\r\n        const theDiv = document.getElementById(this.id);\r\n        const mediaPlayer = document.createElement('div');\r\n        mediaPlayer.style.position = 'relative';\r\n        mediaPlayer.style.borderRadius = this.buttonShape === \"rounded\" ? '20px' : 0;\r\n        //  mediaPlayer.id = this.id;\r\n        mediaPlayer.style.backgroundColor = this.backgroundColor;\r\n        mediaPlayer.classList.add('mediaPlayer');\r\n\r\n        document.body.appendChild(theDiv);\r\n        theDiv.appendChild(mediaPlayer);\r\n\r\n        this.mediaContainer = document.createElement('div');\r\n        this.mediaContainer.classList.add('mediaContainer');\r\n        if (this.theme === \"advance\") {\r\n            this.advanceTheme();\r\n        } else {\r\n            this.simpleTheme()\r\n        }\r\n\r\n        mediaPlayer.appendChild(this.mediaContainer);\r\n\r\n    }\r\n    simpleTheme() {\r\n        this.mediaContainer.innerHTML = '';\r\n\r\n        const mediaSingle = document.createElement('div');\r\n        mediaSingle.classList.add('mediaSingle');\r\n\r\n        this.play = this.createBtn('play', this.play_btn.bind(this), mediaSingle)\r\n\r\n        this.mediaContainer.appendChild(mediaSingle);\r\n\r\n    }\r\n    advanceTheme() {\r\n        this.mediaContainer.innerHTML = '';\r\n\r\n        const mediaTop = document.createElement('div');\r\n        mediaTop.classList.add('mediaTop');\r\n\r\n        const title = document.createElement('h2');\r\n        title.classList.add('title');\r\n        title.textContent = `Media Player`;\r\n\r\n        mediaTop.appendChild(title);\r\n\r\n        const mediaMiddle = document.createElement('div');\r\n        mediaMiddle.classList.add('mediaMiddle');\r\n\r\n        const mediaLibrary = document.createElement('div');\r\n        mediaLibrary.classList.add('mediaLibrary');\r\n        mediaMiddle.appendChild(mediaLibrary);\r\n        const playerImg = document.createElement('img');\r\n        playerImg.src = this.Img\r\n        mediaLibrary.appendChild(playerImg);\r\n\r\n        const mediaBottom = document.createElement('div');\r\n        mediaBottom.classList.add('mediaBottom');\r\n\r\n        const playControl = document.createElement('div');\r\n        playControl.classList.add('playControl');\r\n\r\n        this.createBtn('prev', this.prev_btn.bind(this), playControl)\r\n        this.play = this.createBtn('play', this.play_btn.bind(this), playControl)\r\n        this.createBtn('next', this.next_btn.bind(this), playControl)\r\n        this.volume = this.createBtn('volumeUp', this.vol_btn.bind(this), playControl)\r\n        this.createBtn('loop', this.loop_btn.bind(this), playControl)\r\n\r\n\r\n        const mediaSeek = document.createElement('div');\r\n        mediaSeek.classList.add('mediaSeek');\r\n\r\n        const durationSlider = document.createElement('input');\r\n        durationSlider.type = 'range';\r\n        durationSlider.id = 'duration_slider'\r\n        durationSlider.min = '0'\r\n        durationSlider.max = '100'\r\n        durationSlider.value = '0'\r\n        this.durationSlider = durationSlider\r\n        durationSlider.addEventListener('change', this.duration_change.bind(this))\r\n\r\n        mediaSeek.appendChild(durationSlider);\r\n\r\n        mediaBottom.appendChild(playControl);\r\n        mediaBottom.appendChild(mediaSeek);\r\n        // function load the track\r\n\r\n        this.load_track();\r\n\r\n        this.mediaContainer.appendChild(mediaTop);\r\n        this.mediaContainer.appendChild(mediaMiddle);\r\n        this.mediaContainer.appendChild(mediaBottom);\r\n\r\n    }\r\n\r\n    load_track() {\r\n        this.durationSlider.value = ((this.howlPlayer.seek() / this.howlPlayer.duration()) * 100)\r\n    };\r\n\r\n    createBtn(newClass, func, appender, updateClass) {\r\n        const btn = document.createElement('span');\r\n        btn.style.backgroundColor = this.buttonColor;\r\n        btn.id = newClass;\r\n        btn.addEventListener('click', func);\r\n        btn.classList.add(newClass, updateClass)\r\n\r\n        return appender.appendChild(btn);\r\n    }\r\n    prev_btn() {\r\n        console.log(\"prev\")\r\n        //  this.howlPlayer.s()\r\n    }\r\n    play_btn() {\r\n\r\n        this.open = !this.open;\r\n        if (this.open) {\r\n            console.log(\"play \")\r\n            this.howlPlayer.play()\r\n            this.play.classList.remove('play');\r\n            this.play.classList.add('pause');\r\n            this.playing = \"playing\";\r\n            updatePlay(this.playing, this.id)\r\n            this.volume = setVolume(this.id)\r\n            console.log(this.volume, this.id)\r\n            if (this.mode === \"\" || !this.mode) {\r\n                if (getId(this.id) == true) {\r\n                    //do nothing\r\n                    console.log(\"playing, ///\" + this.id)\r\n                } else {\r\n                    //pause others, pause function\r\n                    console.log(\"paused,/// \")\r\n\r\n                }\r\n            }\r\n        } else {\r\n            console.log(\"pause \")\r\n            this.howlPlayer.pause()\r\n            this.play.classList.add('play');\r\n            this.play.classList.remove('pause');\r\n            this.playing = \"paused\"\r\n            updatePlay(this.playing, this.id)\r\n        }\r\n    }\r\n\r\n    range_slider() {\r\n        let position = 0;\r\n\r\n        // update slider position\r\n        if (!this.howlPlayer.duration()) {\r\n            position = this.howlPlayer.seek() * (100 / this.howlPlayer.duration());\r\n            this.durationSlider.value = position;\r\n            console.log(position)\r\n        }\r\n    }\r\n    next_btn() {\r\n        console.log(\"next\")\r\n    }\r\n    vol_btn() {\r\n        console.log(\"vol\")\r\n        this.mute = !this.mute;\r\n        if (this.mute) {\r\n            this.howlPlayer.mute(true)\r\n            this.volume.classList.remove('volumeUp');\r\n            this.volume.classList.add('volumeOff');\r\n        } else {\r\n            this.howlPlayer.mute(false)\r\n            this.volume.classList.add('volumeUp');\r\n            this.volume.classList.remove('volumeOff');\r\n        }\r\n    }\r\n    loop_btn() {\r\n        console.log(\"loop\")\r\n        this.loop = !this.loop;\r\n        if (this.mute) {\r\n            this.howlPlayer.loop(true)\r\n            this.volume.classList.remove('loop');\r\n            this.volume.classList.add('loopOff');\r\n        } else {\r\n            this.howlPlayer.loop(false)\r\n            this.volume.classList.add('loop');\r\n            this.volume.classList.remove('loopOff');\r\n        }\r\n    }\r\n    duration_change() {\r\n        let slider_position = this.howlPlayer.duration() * (this.durationSlider.value / 100);\r\n        this.howlPlayer.seek(slider_position)\r\n        // console.log(\"duration\", this.durationSlider.value, 'dur', this.howlPlayer.duration())\r\n    }\r\n\r\n    createStyles() {\r\n        const styleTag = document.createElement('style');\r\n        styleTag.innerHTML = styles.replace(/^\\s+|\\n/gm, '');\r\n        document.head.appendChild(styleTag);\r\n    }\r\n    formatTime(secs) {\r\n        var minutes = Math.floor(secs / 60) || 0;\r\n        var seconds = (secs - minutes * 60) || 0;\r\n\r\n        return minutes + ':' + (seconds < 10 ? '0' : '') + seconds;\r\n    }\r\n\r\n}","import MediaPlayer from \"./MediaPlayer\";\r\n\r\nexport default { MediaPlayer };\r\n\r\nconsole.log(\"Media Player Active!\");\r\n","export const styles = `\r\n.mediaPlayer {\r\n    height: auto;\r\n    width: 100%;\r\n    }\r\n\r\n.mediaContainer {\r\n    position: relative;\r\n    display: flex;\r\n    margin: 0 auto;\r\n    width: 100%;\r\n    align-items: center;\r\n    justify-content: center;\r\n    flex-direction: column;\r\n    gap: 20px;\r\n    padding: 20px 0;\r\n}\r\n\r\n.mediaTop {\r\n    flex: 1;\r\n}\r\n\r\n.mediaTop .title {\r\n    color: white;\r\n}\r\n\r\n.mediaMiddle {\r\n    flex: 3;\r\n    display: flex;\r\n    flex-direction: row;\r\n    gap: 20px;\r\n}\r\n\r\n.mediaBottom {\r\n    flex: 1;\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    justify-content: center;\r\n    gap: 10px;\r\n}\r\n\r\n.mediaSingle {\r\n    flex: 1;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    border-radius: 50%;\r\n}\r\n\r\n.playControl {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 5px;\r\n}\r\n\r\n.playControl button img {\r\n    width: 20px;\r\n    height: 20px;\r\n    cursor: pointer;\r\n}\r\n\r\n.mediaSeek {}\r\n\r\n/*both range slider*/\r\ninput[type=\"range\"] {\r\n    -webkit-appearance: none;\r\n    width: 200px;\r\n    outline: none;\r\n    height: 2px;\r\n    margin: 0 15px;\r\n}\r\n\r\ninput[type=\"range\"]::-webkit-slider-thumb {\r\n    -webkit-appearance: none;\r\n    height: 15px;\r\n    width: 3px;\r\n    background-color: rgb(84, 216, 75);\r\n    /* border-radius: 50%;*/\r\n    cursor: pointer;\r\n}\r\n\r\n        \r\n.play,\r\n.pause,\r\n.next,\r\n.prev,\r\n.volumeOff,\r\n.volumeUp,\r\n.loop {\r\n    cursor: pointer;\r\n    display: inline-block;\r\n    -webkit-mask-repeat: no-repeat;\r\n    mask-repeat: no-repeat;\r\n    -webkit-mask-size: 100% 100%;\r\n    mask-size: 100% 100%;\r\n}\r\n.play {\r\n    font-size: 1.5em;\r\n    width: 1.5em;\r\n    height: 1.5em;\r\n    --svg: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24'%3E%3Cpath fill='%23000' fill-rule='evenodd' d='m9.524 4.938l10.092 6.21a1 1 0 0 1 0 1.704l-10.092 6.21A1 1 0 0 1 8 18.21V5.79a1 1 0 0 1 1.524-.852M9.2 6.148v11.705L18.71 12z'/%3E%3C/svg%3E\");\r\n    -webkit-mask-image: var(--svg);\r\n    mask-image: var(--svg);\r\n}\r\n\r\n.pause {\r\n    font-size: 1.5em;\r\n    width: 1.5em;\r\n    height: 1.5em;\r\n    --svg: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24'%3E%3Cpath fill='%23000' fill-rule='evenodd' d='M7 5h2c.552 0 1 .418 1 .933v12.134c0 .515-.448.933-1 .933H7c-.552 0-1-.418-1-.933V5.933C6 5.418 6.448 5 7 5m.2 12.8h1.6V6.2H7.2zM15 5h2c.552 0 1 .418 1 .933v12.134c0 .515-.448.933-1 .933h-2c-.552 0-1-.418-1-.933V5.933c0-.515.448-.933 1-.933m.2 12.8h1.6V6.2h-1.6z'/%3E%3C/svg%3E\");\r\n    -webkit-mask-image: var(--svg);\r\n    mask-image: var(--svg);\r\n}\r\n\r\n.next {\r\n    width: 1em;\r\n    height: 1em;\r\n    --svg: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Cpath fill='%23000' d='M26.002 5a1 1 0 1 1 2 0v22a1 1 0 0 1-2 0zM3.999 6.504c0-2.002 2.236-3.192 3.897-2.073l14.003 9.432A2.5 2.5 0 0 1 21.912 18L7.909 27.56c-1.66 1.132-3.91-.056-3.91-2.065zm2.78-.414a.5.5 0 0 0-.78.414v18.992a.5.5 0 0 0 .782.412l14.003-9.559a.5.5 0 0 0-.002-.828z'/%3E%3C/svg%3E\");\r\n    background-color: blue;\r\n    -webkit-mask-image: var(--svg);\r\n    mask-image: var(--svg);\r\n}\r\n\r\n.prev {\r\n    width: 1em;\r\n    height: 1em;\r\n    --svg: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 28 28'%3E%3Cpath fill='%23000' d='M4.5 3.75a.75.75 0 0 0-1.5 0v20.5a.75.75 0 0 0 1.5 0zM25 5.254c0-1.816-2.041-2.884-3.533-1.848l-12.504 8.68a2.25 2.25 0 0 0-.013 3.688l12.504 8.81c1.49 1.05 3.546-.015 3.546-1.839zm-2.678-.616a.75.75 0 0 1 1.178.616v17.491a.75.75 0 0 1-1.182.613l-12.504-8.81a.75.75 0 0 1 .004-1.23z'/%3E%3C/svg%3E\");\r\n    background-color: blue;\r\n    -webkit-mask-image: var(--svg);\r\n    mask-image: var(--svg);\r\n}\r\n\r\n.loop {\r\n    width: 1em;\r\n    height: 1em;\r\n    font-size: 1em;\r\n    --svg: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24'%3E%3Cpath fill='%23000' fill-rule='evenodd' d='M11.577 5.211a7.8 7.8 0 1 0 5.938 2.274l.849-.849a9 9 0 1 1-7.195-2.598l-1.19-1.19l.85-.848l2.474 2.475a.5.5 0 0 1 0 .707l-.495.495l-1.98 1.98l-.848-.849z'/%3E%3C/svg%3E\");\r\n    background-color: blue;\r\n    -webkit-mask-image: var(--svg);\r\n    mask-image: var(--svg);\r\n}\r\n\r\n.volumeUp {\r\n    margin-left: 10px;\r\n    width: 1.1em;\r\n    height: 1.1em;\r\n    font-size: 1.1em;\r\n    --svg: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24'%3E%3Cpath fill='%23000' fill-rule='evenodd' d='M12 5.414L7.914 9.5H3v5h4.914L12 18.586zM7.5 8.5l3.793-3.793A1 1 0 0 1 13 5.414v13.172a1 1 0 0 1-1.707.707L7.5 15.5H3a1 1 0 0 1-1-1v-5a1 1 0 0 1 1-1zm9.808 8.308A6.77 6.77 0 0 0 19.3 12c0-1.83-.724-3.54-1.992-4.808l.849-.849A7.98 7.98 0 0 1 20.5 12c0 2.21-.895 4.21-2.343 5.657zm-1.98-1.98A3.98 3.98 0 0 0 16.5 12a3.98 3.98 0 0 0-1.172-2.828l.849-.849A5.18 5.18 0 0 1 17.7 12a5.18 5.18 0 0 1-1.523 3.677z'/%3E%3C/svg%3E\");\r\n    -webkit-mask-image: var(--svg);\r\n    mask-image: var(--svg);\r\n}\r\n\r\n.volumeOff {\r\n    margin-left: 10px;\r\n    width: 1em;\r\n    height: 1em;\r\n    font-size: 1em;\r\n    --svg: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24'%3E%3Cpath fill='%23000' fill-rule='evenodd' d='m8.849 7.151l2.444-2.444A1 1 0 0 1 13 5.414v5.889l2.864 2.863A4 4 0 0 0 16.5 12a3.98 3.98 0 0 0-1.172-2.828l.849-.849A5.18 5.18 0 0 1 17.7 12c0 1.13-.36 2.177-.973 3.03l1.143 1.143A6.77 6.77 0 0 0 19.3 12c0-1.83-.724-3.54-1.992-4.808l.849-.849A7.98 7.98 0 0 1 20.5 12a7.97 7.97 0 0 1-1.776 5.027l2.701 2.7l-.849.85L3.85 3.848L4.697 3zM12 10.303V5.414L9.556 7.86zM7.803 9.5H3v5h4.914L12 18.586v-4.889l1 1v3.889a1 1 0 0 1-1.707.707L7.5 15.5H3a1 1 0 0 1-1-1v-5a1 1 0 0 1 1-1h3.803z'/%3E%3C/svg%3E\");\r\n    -webkit-mask-image: var(--svg);\r\n    mask-image: var(--svg);\r\n}\r\n`"],"names":["root","factory","exports","module","define","amd","self","HowlerGlobal","this","init","prototype","Howler","_counter","_html5AudioPool","html5PoolSize","_codecs","_howls","_muted","_volume","_canPlayEvent","_navigator","window","navigator","masterGain","noAudio","usingWebAudio","autoSuspend","ctx","autoUnlock","_setup","volume","vol","parseFloat","setupAudioContext","gain","setValueAtTime","currentTime","i","length","_webAudio","ids","_getSoundIds","j","sound","_soundById","_node","mute","muted","stop","unload","close","codecs","ext","replace","state","_autoSuspend","Audio","oncanplaythrough","e","_setupCodecs","audioTest","err","canPlayType","mpegTest","ua","userAgent","checkOpera","match","isOldOpera","parseInt","split","checkSafari","indexOf","safariVersion","isOldSafari","mp3","mpeg","opus","ogg","oga","wav","aac","caf","m4a","m4b","mp4","weba","webm","dolby","flac","_unlockAudio","_audioUnlocked","_mobileUnloaded","sampleRate","_scratchBuffer","createBuffer","unlock","audioNode","_unlocked","_releaseHtml5Audio","load","_autoResume","source","createBufferSource","buffer","connect","destination","start","noteOn","resume","onended","disconnect","document","removeEventListener","_emit","addEventListener","_obtainHtml5Audio","pop","testPlay","play","Promise","then","catch","console","warn","audio","push","suspend","_sounds","_paused","_suspendTimer","clearTimeout","setTimeout","handleSuspension","_resumeAfterSuspend","Howl","o","src","error","_autoplay","autoplay","_format","format","_html5","html5","_loop","loop","_pool","pool","_preload","preload","_rate","rate","_sprite","sprite","_src","undefined","_xhr","method","xhr","headers","withCredentials","_duration","_state","_endTimers","_queue","_playLock","_onend","onend","fn","_onfade","onfade","_onload","onload","_onloaderror","onloaderror","_onplayerror","onplayerror","_onpause","onpause","_onplay","onplay","_onstop","onstop","_onmute","onmute","_onvolume","onvolume","_onrate","onrate","_onseek","onseek","_onunlock","onunlock","_onresume","event","action","url","str","exec","toLowerCase","location","protocol","slice","Sound","loadBuffer","internal","id","num","_ended","_id","_inactiveSound","soundId","_loadQueue","seek","Math","max","_seek","duration","timeout","abs","setParams","_start","_stop","node","playWebAudio","_refreshBuffer","_playStart","bufferSource","noteGrainOn","Infinity","bind","once","_clearTimer","playHtml5","playbackRate","paused","loadedNoReadyState","ejecta","readyState","isCocoonJS","listener","pause","_rateSeek","_stopFade","noteOff","_cleanBuffer","isNaN","arguments","_clearSound","_interval","args","apply","fade","from","to","len","min","end","linearRampToValueAtTime","_startFadeInterval","isGroup","diff","steps","stepLen","lastTick","Date","now","_fadeTo","setInterval","tick","round","clearInterval","cancelScheduledValues","loopStart","loopEnd","playing","realTime","rateSeek","seekAndEmit","emitSeek","sounds","_errorFn","_loadFn","_endFn","index","splice","remCache","cache","on","events","off","isId","keys","Object","Array","isArray","msg","call","task","shift","ended","_drain","reset","limit","cnt","_panner","isIOS","vendor","test","howl","_parent","parent","create","createGain","createGainNode","_errorListener","_loadListener","_endListener","code","ceil","__default","loadSound","data","atob","dataView","Uint8Array","charCodeAt","decodeAudioData","XMLHttpRequest","open","responseType","forEach","key","setRequestHeader","status","response","onerror","safeXhrSend","send","arraybuffer","success","AudioContext","webkitAudioContext","iOS","platform","appVersion","version","safari","g","_super","_pos","_orientation","stereo","pan","pos","x","y","z","positionX","setTargetAtTime","positionY","positionZ","setPosition","orientation","xUp","yUp","zUp","or","forwardX","forwardY","forwardZ","upX","upY","upZ","setOrientation","_stereo","_pannerAttr","coneInnerAngle","coneOuterAngle","coneOuterGain","distanceModel","maxDistance","panningModel","refDistance","rolloffFactor","_onstereo","onstereo","_onpos","onpos","_onorientation","onorientation","pannerType","createStereoPanner","setupPanner","orientationX","orientationY","orientationZ","pannerAttr","_coneInnerAngle","_coneOuterAngle","_coneOuterGain","_distanceModel","_maxDistance","_refDistance","_rolloffFactor","_panningModel","pa","panner","type","createPanner","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","d","definition","defineProperty","enumerable","get","globalThis","Function","obj","prop","hasOwnProperty","r","Symbol","toStringTag","value","updatePlay","retrievedString","localStorage","getItem","parsedObject","JSON","parse","filter","setItem","stringify","player","MediaPlayer","_ref","_ref$position","position","_ref$BackgroundColor","BackgroundColor","_ref$ButtonColor","ButtonColor","_ref$ButtonShape","ButtonShape","_ref$Mode","Mode","_ref$Img","Img","_ref$Url","Url","_ref$HtmlId","HtmlId","_ref$Volume","Volume","Theme","_classCallCheck","getPosition","backgroundColor","buttonColor","buttonShape","img","mode","theme","initialise","createStyles","_ref2","_position$split","vertical","horizontal","log","butttonColor","background","media","item","playerId","howlPlayer","theDiv","getElementById","mediaPlayer","createElement","style","borderRadius","classList","add","body","appendChild","mediaContainer","advanceTheme","simpleTheme","innerHTML","mediaSingle","createBtn","play_btn","mediaTop","title","textContent","mediaMiddle","mediaLibrary","playerImg","mediaBottom","playControl","prev_btn","next_btn","vol_btn","loop_btn","mediaSeek","durationSlider","duration_change","load_track","newClass","func","appender","updateClass","btn","playedAudio","remove","othersAudio","setVolume","slider_position","styleTag","head","secs","minutes","floor","seconds"],"sourceRoot":""}